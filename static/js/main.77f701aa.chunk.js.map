{"version":3,"sources":["constants/Constants.ts","constants/CssConstants.ts","components/Header.tsx","assets/glen-mt.jpg","components/AlertBanner.tsx","components/Home.tsx","components/Resume.tsx","components/AppContentRouter.tsx","App.tsx","index.tsx"],"names":["ThemeTypes","Routes","shared","accentColor","dark","primaryBackground","secondaryBackground","textColor","light","HeaderEl","styled","header","CssConstants","props","isDarkTheme","HeaderBorder","div","Header","location","useLocation","useState","pathname","replace","selectedTab","setSelectedTab","React","className","BottomNavigation","value","showLabels","BottomNavigationAction","component","Link","label","icon","to","home","Description","resume","AlertWrapper","AlertBanner","displayAlert","setDisplayAlert","Alert","severity","onClose","PageWrapper","Img","img","MobileImg","DesktopImg","GridContainerColumns","GridContainerRows","TextContainer","span","isDesktopView","Home","useMediaQuery","GridElement","ImageElemnt","src","profileImag","ResumeIFrame","iframe","ContentWrapper","Resume","isLoading","setIsLoading","CircularProgress","title","Constants","onLoad","AppContentRouter","path","exact","AppContentWrapper","App","prefersDarkMode","theme","useMemo","createMuiTheme","palette","type","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f701aa.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport enum ThemeTypes {\n    light = 'lgiht',\n    dark = 'dark'\n};\n\nexport enum Routes {\n    home = \"/\",\n    resume = \"/resume\"\n};\n\nexport default {\n    resumeIframeSource: \"https://docs.google.com/gview?url=https://github.com/gsimon2/Resume/raw/main/Resume.pdf&embedded=true\"\n};","/* eslint-disable */\nexport default {\n    headerHeight: '3.5rem',\n    headerBorderWidth: '0.0625rem',\n    totalHeaderHeight: '3.5625rem',\n    appContentMaxWidth: '80rem',\n    appContentMinWidth: '450px',\n    themes: {\n        shared: {\n            accentColor: '#3f51b5'\n        },\n        dark: {\n            primaryBackground: '#282e3a',\n            secondaryBackground: '#181d27',\n            textColor: 'lightgray'\n        },\n        light: {\n            primaryBackground: '#dedddd',\n            secondaryBackground: '#e8f4fd',\n            textColor: 'black'\n        }\n    }\n};","import { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Routes } from '../constants/Constants';\nimport { Description, Home } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nconst HeaderEl = styled.header<{isDarkTheme: boolean}>`\n    height: ${CssConstants.headerHeight};\n\n    >div {\n        background-color: ${props => props.isDarkTheme ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n    }\n`;\n\nconst HeaderBorder = styled.div`\n    height: ${CssConstants.headerBorderWidth};\n    background-color: ${CssConstants.themes.shared.accentColor};\n`;\n\nconst Header: React.FC<IHeaderProps> = ({isDarkTheme}) => {\n    const location = useLocation();\n    const [selectedTab, setSelectedTab] = useState<string>(location.pathname.replace('/', ''));\n\n    React.useEffect(() => {\n        setSelectedTab(location.pathname.replace('/', ''))\n    }, [location.pathname])\n\n    return (\n        <>\n            <HeaderEl className=\"App-header\" isDarkTheme={isDarkTheme} >\n                <BottomNavigation value={selectedTab} showLabels >\n                    <BottomNavigationAction component={Link} label=\"Home\" value=\"\" icon={<Home />} to={Routes.home} />\n                    <BottomNavigationAction component={Link} label=\"Resume\" value=\"resume\" icon={<Description />} to={Routes.resume} />\n                </BottomNavigation>\n            </HeaderEl>\n            <HeaderBorder />\n        </>\n    );\n};\n\ninterface IHeaderProps {\n    isDarkTheme: boolean;\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/glen-mt.74ceae32.jpg\";","import { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nconst AlertWrapper = styled.div`\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: 1rem auto 0;\n`;\n\nconst AlertBanner: React.FC = () => {\n    const [displayAlert, setDisplayAlert] = useState(true);\n\n    return (\n        <>\n        { displayAlert ?\n            <AlertWrapper>\n                <Alert severity=\"info\" onClose={() => setDisplayAlert(false)}>Site is under development - More to come soon! = D</Alert>\n            </AlertWrapper> :\n            null\n        }\n        </>\n    );\n};\n\nexport default AlertBanner;","import { useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport profileImag from '../assets/glen-mt.jpg';\nimport CssConstants from '../constants/CssConstants';\nimport AlertBanner from './AlertBanner';\n\nconst PageWrapper = styled.div`\n    width: 100%;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: auto;\n    padding: 2rem 1rem;\n    box-sizing: border-box;\n`;\n\nconst Img = styled.img`\n    border-radius: 20%;\n    object-fit: contain;\n    justify-self: center;\n`;\n\nconst MobileImg = styled(Img)`\n    min-width: 0;\n    max-width: 22rem;\n    max-height: 100%;\n`;\n\nconst DesktopImg = styled(Img)`\n    max-width: 100%;\n    max-height: 35rem;\n`;\n\nconst GridContainerColumns = styled.div`\n    display: grid;\n    grid-template-columns: minmax(5rem, 1fr) 1fr;\n`;\n\nconst GridContainerRows = styled.div`\n    display: grid;\n    grid-template-rows: minmax(5rem, 1fr) 1fr;\n`;\n\nconst TextContainer = styled.span<{isDesktopView: boolean}>`\n    margin: ${props => props.isDesktopView ? '4rem 1rem 0 4rem' : '2rem auto'};\n    word-break: break-word;\n`;\n\nconst Home: React.FC = () => {\n    const isDesktopView = useMediaQuery('(min-width:650px)');\n    const GridElement = isDesktopView ? GridContainerColumns : GridContainerRows;\n    const ImageElemnt = isDesktopView ? DesktopImg : MobileImg ;\n\n    return (\n        <>\n            <AlertBanner />\n            <PageWrapper>\n                <GridElement>\n                    <ImageElemnt src={profileImag} />\n                    <TextContainer isDesktopView={isDesktopView}>Hi I'm Glen! Eventually I will talk about myself here</TextContainer>\n                </GridElement>\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default Home;","import { CircularProgress } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Constants from '../constants/Constants';\nimport CssConstants from '../constants/CssConstants';\n\nconst ResumeIFrame = styled.iframe`\n    height: 100%;\n`;\n\nconst ContentWrapper = styled.div`\n    width: 100%;\n    position: absolute;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Resume: React.FC = () => {\n    const [isLoading, setIsLoading] = useState(true);\n\n    return (\n        <>\n            {isLoading && <ContentWrapper><CircularProgress /></ContentWrapper>}\n            <ResumeIFrame title=\"ResumeWrapper\" src={Constants.resumeIframeSource} onLoad={() => setIsLoading(false)} />\n        </>\n    );\n};\n\nexport default Resume;","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Routes } from '../constants/Constants';\nimport Home from './Home';\nimport Resume from './Resume';\n\nconst AppContentRouter: React.FC = () => {\n\n    return (\n        <>\n            <Route  path={Routes.resume} component={Resume}/>\n            <Route  exact path={Routes.home} component={Home}/>\n        </>\n    );\n};\n\nexport default AppContentRouter;","import { BrowserRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport AppContentRouter from './components/AppContentRouter';\nimport { createMuiTheme, ThemeProvider, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport CssConstants from './constants/CssConstants';\n\nconst PageWrapper = styled.div<{isDarkTheme: boolean}>`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  background-color: ${props => props.isDarkTheme ? CssConstants.themes.dark.primaryBackground : CssConstants.themes.light.primaryBackground};\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  color: ${props => props.isDarkTheme ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n`;\n\nconst AppContentWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode],\n  );\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <PageWrapper isDarkTheme={prefersDarkMode}>\n          <AppContentWrapper>\n            <Header isDarkTheme={prefersDarkMode} />\n            <AppContentRouter />\n          </AppContentWrapper>\n        </PageWrapper>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}