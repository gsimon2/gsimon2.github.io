{"version":3,"sources":["constants/Constants.ts","constants/CssConstants.ts","redux/userPreferencesSlice.ts","components/Header/ThemeSelector.tsx","components/Header/SettingsMenu.tsx","components/Header/MobileNavMenu.tsx","components/Header/Header.tsx","assets/glen-mt.jpg","util/sharedElements.tsx","components/Home.tsx","components/Resume.tsx","components/projects/TagDisplay.tsx","components/projects/ProjectTagsDisplay.tsx","components/projects/ProjectModal.tsx","components/projects/ProjectCard.tsx","siteInfo/projects.ts","components/projects/ProjectsPage.tsx","components/AlertBanner.tsx","components/githubStats/GithubStatsPage.tsx","components/AppContentRouter.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["ThemeTypes","Routes","ProjectTags","shared","accentColor","dark","primaryBackground","secondaryBackground","textColor","light","initialState","theme","prefersLightTheme","window","matchMedia","matches","storedUserTheme","themeCookie","document","cookie","split","filter","item","trim","startsWith","Constants","length","e","console","error","getThemeFromCookie","getUsersThemePreference","userPreferenceSlice","createSlice","name","reducers","updateTheme","state","action","newTheme","setThemeCookie","payload","actions","Wrapper","styled","div","ThemeSelector","themeType","useSelector","userPreferences","dispatch","useDispatch","ToggleButtonGroup","value","exclusive","onChange","event","aria-label","ToggleButton","title","MenuContainer","SettingsMenu","React","useState","anchorEl","setAnchorEl","isMobileView","useMediaQuery","CssConstants","handleClick","currentTarget","open","Boolean","id","undefined","settingsButton","IconButton","onClick","Button","aria-describedby","variant","color","startIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","useStyles","makeStyles","selected","boxShadow","listItem","palette","type","background","MobileNavMenu","location","useLocation","isDrawerOpen","setIsDrawerOpen","pathname","selectedTab","setSelectedTab","useTheme","classes","useEffect","toggleDrawer","key","SwipeableDrawer","anchor","onOpen","ListItem","component","Link","to","home","className","ListItemIcon","ListItemText","primary","githubStats","projects","Collections","resume","Description","header","display","height","backgroundColor","position","top","zIndex","appBar","bottomNav","headerBorder","minHeight","leftHeaderElement","maxWidth","minWidth","flex","marginRight","RightHeaderElement","width","marginLeft","Header","NavElement","BottomNavigation","showLabels","BottomNavigationAction","label","icon","PageWrapper","Img","img","MobileImg","DesktopImg","GridContainerColumns","GridContainerRows","TextContainer","span","props","Home","GridContainer","ImageElemnt","Grow","in","src","profileImag","ResumeIFrame","iframe","ContentWrapper","Resume","isLoading","setIsLoading","CircularProgress","onLoad","IconWrapper","TagDisplay","text","link","isCompactView","expandedElement","href","target","rel","TypeTagsWrapperCompact","TypeTyagsWrapperExpanded","ProjectTagsDisplay","tags","tagsElements","map","t","github","foundry","academic","paper","code","ModalWrapper","shadows","spacing","h2","ImgWrapper","FullScreenImgWrapper","FullScreenImg","P","p","modal","overflow","padding","closeButtonWrapper","justifyContent","margin","ProjectModal","project","isOpen","showFullScreenImg","setShowFullScreenImg","Modal","onRendered","getElementById","focus","alt","year","description","media","card","borderColor","wrapper","boxSizing","cursor","descriptionWrapper","textOverflow","WebkitLineClamp","WebkitBoxOrient","fontSize","cardTopWrapper","flexDirection","yearSpan","ProjectCard","displayModal","setDisplayModal","Card","CardMedia","image","CardContent","numColumns","toolbar","search","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","clearButton","ProjectsPage","filterText","setFilterText","isSingleColumnView","isDoubleColumnView","isTripleColumnView","projectsToDisplay","toLowerCase","includes","some","toString","index","AppBar","Toolbar","InputBase","placeholder","autoComplete","root","input","endAdornment","alert","border","popoutContainer","snackbar","marginTop","AlertBanner","displayAlert","setDisplayAlert","Alert","severity","gridContainerColumns","gridTemplateColumns","gridContainerRows","gridTemplateRows","textAlign","bottom","imgDesktop","objectFit","justifySelf","maxHeight","imgMobile","GithubStatsPage","githubReadmeStatsTheme","githubOverviewStats","githubLanguageStats","style","AppContentRouter","path","exact","AppContentWrapper","App","useMemo","createMuiTheme","ThemeProvider","store","configureStore","reducer","userPreferenceReducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf73c985.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport enum ThemeTypes {\n    light = 'light',\n    dark = 'dark'\n};\n\nexport enum Routes {\n    home = \"/\",\n    resume = \"/resume\",\n    projects = \"/projects\",\n    githubStats = '/githubStats'\n};\n\nexport enum ProjectTags {\n    github = \"github\",\n    foundry = \"foundry\",\n    academic = \"academic\",\n    paper = \"paper\",\n    code = \"code\"\n}\n\nexport default {\n    resumeIframeSource: \"https://docs.google.com/gview?url=https://github.com/gsimon2/Resume/raw/main/Resume.pdf&embedded=true\",\n    githubRepoLink: \"https://github.com/gsimon2\",\n    themeKey: \"themeType\"\n};","/* eslint-disable */\nexport default {\n    headerHeight: '3.5rem',\n    headerBorderWidth: '0.0625rem',\n    totalHeaderHeight: '3.5625rem',\n    appContentMaxWidth: '80rem',\n    appContentMinWidth: '450px',\n    mobileBreakPoint: '600px',\n    linkColor: '#3f51b5 !important',\n    linkColorSecondary: '#8395f9 !important',\n    themes: {\n        shared: {\n            accentColor: '#3f51b5'\n        },\n        dark: {\n            primaryBackground: '#282e3a',\n            secondaryBackground: '#181d27',\n            textColor: 'lightgray'\n        },\n        light: {\n            primaryBackground: '#dedddd',\n            secondaryBackground: '#e8f4fd',\n            textColor: 'black'\n        }\n    }\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport Constants, { ThemeTypes } from '../constants/Constants';\n\ninterface IUserPreferences {\n    theme: ThemeTypes\n};\n\nconst getThemeFromCookie = () => {\n    try {\n       const themeCookie: string[] = document.cookie.split(';').filter(item => item.trim().startsWith(`${Constants.themeKey}=`));\n       if (themeCookie?.length) {\n          return themeCookie[0].split('=')[1].trim();\n       }\n       return null;\n    } catch (e) {\n       console.error('Failed to get theme cookie: ', e);\n       return null;\n    }\n };\n\n const setThemeCookie = (newTheme: ThemeTypes) => {\n     try\n     {\n        document.cookie = `${Constants.themeKey}=${newTheme}`;\n     } catch (e) {\n         console.error('Fail to set theme cookie: ', e);\n     }\n };\n  \n  \n const getUsersThemePreference = (): ThemeTypes => {\n    const prefersLightTheme = window.matchMedia('(prefers-color-scheme: light)').matches;\n    const prefersDarkTheme = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const storedUserTheme = getThemeFromCookie();\n  \n    if (storedUserTheme) {\n       return storedUserTheme === ThemeTypes.dark ? ThemeTypes.dark : ThemeTypes.light;\n    } else if (prefersLightTheme) {\n       return ThemeTypes.light;\n    } else if (prefersDarkTheme) {\n       return ThemeTypes.dark;\n    }\n  \n    return ThemeTypes.dark;\n };\n\n const initialState: IUserPreferences = {\n    theme: getUsersThemePreference()\n};\n \n\nexport const userPreferenceSlice = createSlice({\n    name: 'userPreferences',\n    initialState,\n    reducers: {\n        updateTheme: (state, action: PayloadAction<ThemeTypes>) => {\n            setThemeCookie(action.payload);\n            state.theme = action.payload;\n        }\n    }\n});\n\nexport const {updateTheme} = userPreferenceSlice.actions;\nexport default userPreferenceSlice.reducer;","import { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeTypes } from '../../constants/Constants';\nimport { RootState } from '../../redux/store';\nimport { updateTheme } from '../../redux/userPreferencesSlice';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst ThemeSelector: React.FC = () => {\n    const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n    const dispatch = useDispatch();\n\n    const handleThemeChange = (event: React.MouseEvent<HTMLElement>, newTheme: ThemeTypes) => {\n        dispatch(updateTheme(newTheme));\n    };\n   \n    return (\n        <Wrapper>\n            <span>Theme</span>\n            <ToggleButtonGroup value={themeType} exclusive onChange={handleThemeChange} aria-label=\"Theme Selection\">\n                <ToggleButton value={ThemeTypes.dark} aria-label=\"Dark Theme\" title=\"Dark Theme\">\n                    <NightsStayIcon />\n                </ToggleButton>\n                <ToggleButton value={ThemeTypes.light} aria-label=\"Light Theme\" title=\"Light Theme\">\n                    <Brightness7Icon />\n                </ToggleButton>\n            </ToggleButtonGroup>\n        </Wrapper>\n    );\n};\n\nexport default ThemeSelector;","import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ThemeSelector from './ThemeSelector';\nimport { IconButton, useMediaQuery } from '@material-ui/core';\nimport CssConstants from '../../constants/CssConstants';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 0.5rem;\n    height: 100%;\n`;\n\nconst MenuContainer = styled.div`   \n    width: 12.5rem;\n    padding: 0.5rem;\n    box-sizing: border-box;\n`;\n\nconst SettingsMenu: React.FC = () => {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const isMobileView = useMediaQuery(`(max-width:${CssConstants.mobileBreakPoint})`);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'settings-popover' : undefined;\n  const settingsButton = (isMobileView ?\n    <IconButton onClick={handleClick} title=\"Settings\">\n      <SettingsIcon />\n    </IconButton> :\n    <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick} startIcon={<SettingsIcon />} title=\"Settings\">\n        Settings\n    </Button>\n  )\n\n  return (\n    <Wrapper>\n        {settingsButton}\n        <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        >\n            <MenuContainer>\n                <ThemeSelector />\n            </MenuContainer>\n        </Popover>\n    </Wrapper>\n  );\n};\n\nexport default SettingsMenu;","import { IconButton, ListItemIcon, SwipeableDrawer, ListItem, ListItemText, useTheme, Theme, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, Home, Collections } from '@material-ui/icons';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Routes, ThemeTypes } from '../../constants/Constants';\nimport CssConstants from '../../constants/CssConstants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    selected: {\n        boxShadow: `inset 3px 0px 5px 0px ${ThemeTypes.dark ? CssConstants.linkColorSecondary : CssConstants.linkColor}`\n    },\n    listItem: {\n        color: theme.palette.type === ThemeTypes.dark ? CssConstants.linkColorSecondary : CssConstants.linkColor,\n        \"&:hover\": {\n            background: theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.primaryBackground : CssConstants.themes.light.secondaryBackground\n        }\n    }\n}));\n\nconst MobileNavMenu: React.FC = () => {\n    const location = useLocation();\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n    const [selectedTab, setSelectedTab] = useState<string>(location.pathname);\n    const theme = useTheme<Theme>();\n    const classes = useStyles(theme);\n    \n    React.useEffect(() => {\n        setSelectedTab(location.pathname);\n    }, [location.pathname]);\n\n    const toggleDrawer = (open: boolean) => (\n        event: React.KeyboardEvent | React.MouseEvent,\n      ) => {\n        if (\n          event &&\n          event.type === 'keydown' &&\n          ((event as React.KeyboardEvent).key === 'Tab' ||\n            (event as React.KeyboardEvent).key === 'Shift')\n        ) {\n          return;\n        }\n    \n        setIsDrawerOpen(open);\n      };\n\n    return (\n        <div>\n            <IconButton onClick={toggleDrawer(true)} title=\"Navigation Menu\">\n                <MenuIcon />\n            </IconButton>\n            <SwipeableDrawer anchor=\"left\" open={isDrawerOpen} onClose={toggleDrawer(false)} onOpen={toggleDrawer(true)} color=\"primary\">\n                <ListItem component={Link} to={Routes.home} className={`${classes.listItem} ${selectedTab === Routes.home ? classes.selected : ''}`}>\n                    <ListItemIcon><Home /></ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n                <ListItem component={Link} to={Routes.githubStats} className={`${classes.listItem} ${selectedTab === Routes.githubStats ? classes.selected : ''}`}>\n                    <ListItemIcon><GitHubIcon /></ListItemIcon>\n                    <ListItemText primary=\"Github Stats\" />\n                </ListItem>\n                <ListItem component={Link} to={Routes.projects} className={`${classes.listItem} ${selectedTab === Routes.projects ? classes.selected : ''}`}>\n                    <ListItemIcon><Collections /></ListItemIcon>\n                    <ListItemText primary=\"Projects\" />\n                </ListItem>\n                <ListItem component={Link} to={Routes.resume} className={`${classes.listItem} ${selectedTab === Routes.resume ? classes.selected : ''}`}>\n                    <ListItemIcon><Description /></ListItemIcon>\n                    <ListItemText primary=\"Resume\" />\n                </ListItem>\n            </SwipeableDrawer>\n        </div>\n        \n    );\n};\n\nexport default MobileNavMenu;","import { BottomNavigation, BottomNavigationAction, makeStyles, Theme, useMediaQuery, useTheme } from '@material-ui/core';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Routes, ThemeTypes } from '../../constants/Constants';\nimport { Description, Home, Collections } from '@material-ui/icons';\nimport CssConstants from '../../constants/CssConstants';\nimport SettingsMenu from './SettingsMenu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MobileNavMenu from './MobileNavMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    header: {\n        display: 'flex',\n        height: CssConstants.headerHeight,\n        backgroundColor: theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground,\n        position: 'sticky',\n        top: 0,\n        zIndex: theme.zIndex.appBar\n    },\n    bottomNav: {\n        backgroundColor: theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground\n    },\n    headerBorder: {\n        minHeight: CssConstants.headerBorderWidth,\n        backgroundColor: CssConstants.themes.shared.accentColor,\n        position: 'sticky',\n        top: CssConstants.headerHeight\n    },\n    leftHeaderElement: {\n        display: 'flex',\n        maxWidth: '10rem',\n        minWidth: 0,\n        flex: '1 1 auto',\n        marginRight: 'auto'\n    },\n    RightHeaderElement: {\n        width: '10rem',\n        marginLeft: 'auto'\n    }\n  }));\n\nconst Header: React.FC = () => {\n    const location = useLocation();\n    const theme = useTheme<Theme>();\n    const classes = useStyles(theme);\n    const [selectedTab, setSelectedTab] = useState<string>(location.pathname);\n    const isMobileView = useMediaQuery(`(max-width:${CssConstants.mobileBreakPoint})`);\n\n    React.useEffect(() => {\n        setSelectedTab(location.pathname);\n    }, [location.pathname]);\n\n    const NavElement = (\n        <BottomNavigation value={selectedTab} showLabels className={classes.bottomNav} >\n            <BottomNavigationAction component={Link} label=\"Home\" value={Routes.home} icon={<Home />} to={Routes.home} />\n            <BottomNavigationAction component={Link} label=\"Github Stats\" value={Routes.githubStats} icon={<GitHubIcon />} to={Routes.githubStats} />\n            <BottomNavigationAction component={Link} label=\"Projects\" value={Routes.projects} icon={<Collections />} to={Routes.projects} />\n            <BottomNavigationAction component={Link} label=\"Resume\" value={Routes.resume} icon={<Description />} to={Routes.resume} />\n        </BottomNavigation>\n    );\n\n    return (\n        <>\n            <header className={classes.header}>\n                <div className={classes.leftHeaderElement}>{isMobileView && <MobileNavMenu />}</div>\n                {!isMobileView && NavElement}\n                <div className={classes.RightHeaderElement}>\n                    <SettingsMenu />\n                </div>\n            </header>\n            <div className={classes.headerBorder} /> \n        </>\n    );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/glen-mt.74ceae32.jpg\";","import styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nexport const PageWrapper = styled.div`\n    width: 100%;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: auto;\n    padding: 2rem 1rem;\n    box-sizing: border-box;\n`;\n","import { Grow, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport profileImag from '../assets/glen-mt.jpg';\nimport CssConstants from '../constants/CssConstants';\nimport {PageWrapper} from '../util/sharedElements';\n\nconst Img = styled.img`\n    border-radius: 20%;\n    object-fit: contain;\n    justify-self: center;\n`;\n\nconst MobileImg = styled(Img)`\n    min-width: 0;\n    max-width: 22rem;\n    max-height: 100%;\n`;\n\nconst DesktopImg = styled(Img)`\n    max-width: 100%;\n    max-height: 35rem;\n`;\n\nconst GridContainerColumns = styled.div`\n    display: grid;\n    grid-template-columns: minmax(5rem, 1fr) 1fr;\n`;\n\nconst GridContainerRows = styled.div`\n    display: grid;\n    grid-template-rows: minmax(5rem, 1fr) 1fr;\n`;\n\nconst TextContainer = styled.span<{isMobileView: boolean}>`\n    margin: ${props => props.isMobileView ? '2rem auto' : '4rem 1rem 0 4rem'};\n    word-break: break-word;\n`;\n\nconst Home: React.FC = () => {\n    const isMobileView = useMediaQuery(`(max-width:${CssConstants.mobileBreakPoint})`);\n    const GridContainer = isMobileView ? GridContainerRows : GridContainerColumns;\n    const ImageElemnt = isMobileView ? MobileImg : DesktopImg ;\n\n    return (\n        <>\n            <PageWrapper>\n                <GridContainer>\n                    <Grow in={true}>\n                        <ImageElemnt src={profileImag} />\n                    </Grow>\n                    <Grow in={true}>\n                        <TextContainer isMobileView={isMobileView}>Hi I'm Glen! Eventually I will talk about myself here</TextContainer>\n                    </Grow>\n                </GridContainer>\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default Home;","import { CircularProgress } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Constants from '../constants/Constants';\nimport CssConstants from '../constants/CssConstants';\n\nconst ResumeIFrame = styled.iframe`\n    height: 100%;\n`;\n\nconst ContentWrapper = styled.div`\n    width: 100%;\n    position: absolute;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Resume: React.FC = () => {\n    const [isLoading, setIsLoading] = useState(true);\n\n    return (\n        <>\n            {isLoading && <ContentWrapper><CircularProgress /></ContentWrapper>}\n            <ResumeIFrame title=\"ResumeWrapper\" src={Constants.resumeIframeSource} onLoad={() => setIsLoading(false)} />\n        </>\n    );\n};\n\nexport default Resume;","import React from 'react';\nimport styled from 'styled-components';\nimport CssConstants from '../../constants/CssConstants';\n\nconst IconWrapper = styled.div`\n    padding: 0.25rem;\n    display: flex;\n\n    a {\n        margin-left: 0.5rem;\n        color: ${CssConstants.linkColor};\n    }\n\n    span {\n        margin-left: 0.5rem;\n    }\n`;\n\nconst TagDisplay: React.FC<ITagDisplayProps> = ({text, icon, link, isCompactView}) => {\n    const title = link ? isCompactView ? text: link : text;\n    const expandedElement = link ? <a href={link} target=\"_blank\" rel=\"noreferrer\">{text}</a> : <span>{text}</span>;\n\n    return (\n        <IconWrapper title={title}>\n            {icon}\n            {!isCompactView && expandedElement}\n        </IconWrapper>\n    );\n};\n\nexport interface ITagDisplayProps {\n    text: string;\n    icon: any;\n    link?: string;\n    isCompactView: boolean;\n}\n\nexport default TagDisplay;","import React from 'react';\nimport styled from 'styled-components';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { ProjectTags } from \"../../constants/Constants\";\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport { IProjectTag } from '../../models/projectModel';\nimport TagDisplay from './TagDisplay';\nimport SchoolIcon from '@material-ui/icons/School';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst TypeTagsWrapperCompact = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin: 0 -0.5rem -1rem 0;\n`;\n\nconst TypeTyagsWrapperExpanded = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\n\nconst ProjectTagsDisplay: React.FC<IProjectTagsDisplayProps> = ({tags, isCompactView = false}) => {\n    const Wrapper = isCompactView ? TypeTagsWrapperCompact : TypeTyagsWrapperExpanded;\n\n    const tagsElements = tags.map(t => {\n        switch (t.type) {\n            case ProjectTags.github:\n                return <TagDisplay text=\"Github Repo\" icon={<GitHubIcon />} link={t.link} isCompactView={isCompactView} key=\"github-tag\" />;\n            case ProjectTags.foundry:\n                return <TagDisplay text=\"Foundry Module\" icon={<CasinoIcon />} link={t.link} isCompactView={isCompactView} key=\"foundry-tag\" />;\n            case ProjectTags.academic:\n                return <TagDisplay text=\"Academic Project\" icon={<SchoolIcon />} isCompactView={isCompactView} key=\"school-tag\" />;\n            case ProjectTags.paper:\n                return <TagDisplay text=\"Paper\" icon={<DescriptionIcon />} link={t.link} isCompactView={isCompactView} key=\"paper-tag\" />\n            case ProjectTags.code:\n                return <TagDisplay text=\"Coding Project\" icon={<CodeIcon />} isCompactView={isCompactView} key=\"code-tag\" />\n            default:\n                return null;\n        }\n    });\n\n    return (\n        <Wrapper>\n            {tagsElements}\n      </Wrapper>\n    );\n};\n\nexport interface IProjectTagsDisplayProps {\n    tags: IProjectTag[];\n    isCompactView?: boolean;\n}\n\nexport default ProjectTagsDisplay;","import { IconButton, makeStyles, Modal, Theme, useTheme } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ThemeTypes } from '../../constants/Constants';\nimport { IProject } from '../../models/projectModel';\nimport CssConstants from '../../constants/CssConstants';\nimport ProjectTagsDisplay from './ProjectTagsDisplay';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst ModalWrapper = styled.div<{theme: Theme}>`\n    margin: auto;\n    min-width: 0;\n    width: 70vw;\n    background-color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n    color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n    border: 2px solid;\n    border-color: ${CssConstants.themes.shared.accentColor};\n    box-shadow: ${props => props.theme.shadows[5]};\n    padding: ${props => props.theme.spacing(2, 4, 3)};\n    border-radius: 1rem;\n`;\n\nconst Header = styled.h2`\n    text-align: center;\n`;\n\nconst ImgWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    cursor: zoom-in;\n`;\n\nconst Img = styled.img`\n    max-width: min(60vw, ${CssConstants.appContentMaxWidth});\n    max-height: 30rem;\n`;\n\nconst FullScreenImgWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 9999;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: black;\n    cursor: zoom-out;\n`;\n\nconst FullScreenImg = styled.img`\n    width: auto;\n    height: auto;\n    max-width: 100vw;\n    object-fit: contain;\n`;\n\nconst P = styled.p`\n    white-space: pre-line;\n`;\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        overflow: 'auto',\n        padding: '1rem'\n    },\n\n    closeButtonWrapper: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        margin: '-1rem'\n    }\n  });\n\nconst ProjectModal: React.FC<IProjectModalProps> = ({project, isOpen, onClose}) => {\n    const theme = useTheme<Theme>();\n    const classes = useStyles();\n    const [showFullScreenImg, setShowFullScreenImg] = useState(false);\n\n    const onModalRender = () => {\n        document.getElementById('close-modal-button')?.focus();\n    };\n  \n    return (\n        <>\n            <Modal open={isOpen} onClose={onClose} className={classes.modal} onRendered={onModalRender}>\n                <ModalWrapper theme={theme}>\n                    <div className={classes.closeButtonWrapper}>\n                        <IconButton color=\"primary\" onClick={onClose} title=\"close\" id=\"close-modal-button\">\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                    <Header id=\"project-details-modal-title\">{project.name}</Header>\n                    {project.img && <ImgWrapper onClick={() => setShowFullScreenImg(true)}><Img src={project.img} alt={`${project.name}`} /></ImgWrapper>}\n                    <span>{project.year}</span>\n                    <P id=\"project-details-modal-description\">\n                        {project.description}\n                    </P>\n                    {project.tags && <ProjectTagsDisplay tags={project.tags} />}\n                </ModalWrapper>\n            </Modal>\n            <Modal open={showFullScreenImg} onClose={() => setShowFullScreenImg(false)}>\n                <FullScreenImgWrapper onClick={() => setShowFullScreenImg(false) }>\n                    <FullScreenImg src={project.img} alt={`${project.name}-fullscreen`}  />\n                </FullScreenImgWrapper>\n            </Modal>\n        </>\n    );\n};\n\nexport interface IProjectModalProps {\n    project: IProject;\n    isOpen: boolean;\n    onClose(): void;\n}\n\nexport default ProjectModal;","import { Card, CardContent, CardMedia, Grow, makeStyles, Theme, useTheme } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { IProject } from '../../models/projectModel';\nimport ProjectTagsDisplay from './ProjectTagsDisplay';\nimport ProjectModal from './ProjectModal';\nimport CssConstants from '../../constants/CssConstants';\nimport { ThemeTypes } from '../../constants/Constants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    media: {\n      height: 140\n    },\n    card: {\n        padding: '1px',\n        backgroundColor: theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground,\n        borderColor: CssConstants.themes.shared.accentColor,\n        boxShadow: theme.shadows[2]\n    },\n    wrapper: {\n        padding: '1rem',\n        boxSizing: 'border-box',\n        cursor: 'pointer'\n    },\n    descriptionWrapper: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n        fontSize: 'small'\n    },\n    cardTopWrapper: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    yearSpan: {\n        fontSize: 'small'\n    }\n  }));\n\nconst ProjectCard: React.FC<IProject> = (props) => {\n    const {name, img, description, year, tags} = props;\n    const [displayModal, setDisplayModal] = useState(false);\n    const theme = useTheme<Theme>();\n    const classes = useStyles(theme);\n\n    return (\n        <>\n            <Grow in={true}>\n                <div className={classes.wrapper}>\n                    <Card variant=\"outlined\" onClick={() => setDisplayModal(true)} className={classes.card}>\n                        {img && <CardMedia \n                            className={classes.media}\n                            image={img}\n                            title={name}\n                        />}\n                        <CardContent>\n                            <div className={classes.cardTopWrapper}>\n                                <span>\n                                    {name}\n                                </span>\n                                <span className={classes.yearSpan}>\n                                    {year}\n                                </span>\n                            </div>\n                            <p className={classes.descriptionWrapper}>\n                                {description}\n                            </p>\n                            {tags?.length && <ProjectTagsDisplay tags={tags} isCompactView={true} />}\n                        </CardContent>\n                    </Card>\n                </div>\n            </Grow>\n            <ProjectModal project={props} isOpen={displayModal} onClose={() => setDisplayModal(false)} />\n        </>\n    );\n};\n\nexport default ProjectCard;","import { ProjectTags } from \"../constants/Constants\";\nimport { IProject } from \"../models/projectModel\";\n\nexport const projects: IProject[] = [\n    {\n        name: 'Dramatic Rolls',\n        img: \"https://github.com/gsimon2/dramatic-rolls/blob/main/natty20.gif?raw=true\",\n        description: \"A module for FoundryVtt that addes a little excitement to natural 20s and natural 1s.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/dramatic-rolls\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/dramatic-rolls\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Playlist Drag and Drop',\n        img: \"https://github.com/gsimon2/playlist-drag-and-drop/blob/main/playlist-drag-and-drop-demo.gif?raw=true\",\n        description: \"A module for FoundryVtt that allows dragging playlist soundtracks from the sidebar and dropping them onto the map as ambient sounds. Default sound volume, radius, easing, and repeat settings can be configured via the configure settings menu.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/playlist-drag-and-drop\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/playlist-drag-and-drop\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Pf2e Inspire Courage',\n        img: \"https://github.com/gsimon2/pf2e-inspire-courage/blob/main/demo.gif?raw=true\",\n        description: \"A module for FoundryVtt that adds a button to character token HUDs that allows for the toggling of Inspire Courage. This utilizes the PF2e \\\"Inspire Courage\\\" spell effect. Only applies to to actual character actors, not NPCs due to how spell effect interact with their sheet. When inspire courage is active, the inspire courage effect icon will appear on the token and the spell effect will be added to the actor's sheet. The bonus to attack and damage rolls will automatically apply.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/pf2e-inspire-courage\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/pf2e-inspire-courage\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Hide Player UI',\n        description: \"A module for FoundryVtt that the GM can enable to hide all joining player's control UI. The intended use for this is when the player screen is being used for displaying the maps during in-person gaming.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/hide-player-ui\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/hide-player-ui\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Close Player Art',\n        img: \"https://github.com/gsimon2/close-player-art/blob/main/close-art.gif?raw=true\",\n        description: \"A module for FoundryVtt that adds a configurable hot key (Default ` - backtick) for the GM to close open image popouts on player screens\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/close-player-art\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/close-player-art\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Applying Evolution and Novelty Search to Enhance the Resilience of Autonomous Systems',\n        img: \"https://github.com/gsimon2/EvoRos-Enki/blob/main/fig_evoros_enki_dfd.jpg?raw=true\",\n        description: `\n        A paper I contributed to during graduate school. It was publiched in the \"IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)\", Montreal, QC, Canada in May 2019.\n\n        Abstract\n        We investigate the integration of evolutionary algorithms and novelty search in order to improve the performance and resilience of autonomous systems. We have developed two tools for this purpose: Evo-ROS and Enki. Evo-ROS combines evolutionary search with physics-based simulations of autonomous systems whose software infrastructure is based on the Robot Operating System (ROS). Enki uses novelty search to discover operational scenarios that lead to the most diverse behavior in the target system. Combining these tools yields an automated approach to explore the operational landscape of the target system, identify regions of poor performance, and evolve system parameters that better respond to adverse situations. In this paper, we present results of a case study of the throttle controller on AutoRally, a 1:5-scale autonomous vehicle designed by researchers at Georgia Tech for the study of aggressive autonomous driving. Preliminary experiments demonstrate the ability of the proposed methods to identify and characterize input speed signals that cause the existing controller to perform poorly. The ability to identify these troublesome signals enables development of a control system capable of handling a wider range of conditions by autonomously switching among controller modes that are optimized for different conditions.\n        `,\n        year: '2019',\n        tags: [{\n            type: ProjectTags.paper,\n            link: \"https://github.com/gsimon2/EvoRos-Enki/blob/main/Enki___Evo_ROS_Integration.pdf\"\n        }, {\n            type: ProjectTags.academic\n        }]\n    },\n    {\n        name: 'Evo-Ros: Integration Evolution and the Robot Operating System',\n        img: \"https://github.com/gsimon2/EvoRos-Paper/blob/main/Figures/Workflow.png?raw=true\",\n        description: `\n        A paper that I was lead author on during graduate school. It was published in the \"Proceedings of the Genetic and Evolutionary Computation Conference Companion\", pp.1386-1393, Kyoto, Japan in July 2018. \n\n        Abstract\n        In this paper, we describe the Evo-ROS framework, which is intended to help bridge the gap between the evolutionary and traditional robotics communities. Evo-ROS combines an evolutionary algorithm with individual physics-based evaluations conducted using the Robot Operating System (ROS) and the Gazebo simulation environment. Our goals in developing Evo-ROS are to (1) provide researchers in evolutionary robotics with access to the extensive support for real-world components and capabilities developed by the ROS community and (2)  enable ROS developers, and more broadly robotics researchers, to take advantage of evolutionary search during design and testing. We describe the details of the Evo-ROS structure and operation, followed by presentation of a case study using Evo-ROS to optimize placement of sonar sensors on unmanned ground vehicles that can experience reduced sensing capability due to component failures and physical damage. The case study provides insights into the current capabilities and identifies areas for future enhancements.  \n        `,\n        year: '2018',\n        tags: [{\n            type: ProjectTags.paper,\n            link: \"https://gsimon2.github.io/EvoRos-Paper/\"\n        }, {\n            type: ProjectTags.academic\n        }]\n    },\n    {\n        name: 'Custom Fitbit Watchface',\n        img: \"https://github.com/gsimon2/fitbit-watchface/blob/main/demo.gif?raw=true\",\n        description: \"A fun custom Fitbit watch face I designed for my fiancé while we were dating. It has a simple watch face with a background image of our dog, Loki. If you click the sides of the screen in a pre-defined sequence, then a custom message would appear on the screen.\",\n        year: '2018',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/fitbit-watchface\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Population Mapping via Wi-Fi Network Analysis',\n        img: \"https://github.com/gsimon2/population-mapping-via-wifi/blob/main/heat_map_first_floor_110717_6pm.png?raw=true\",\n        description: `\n        A paper that I wrote with a couple of classmates, eleborating our work to utilize Michigan State University's Engineering Building Wi-Fi network to accurately map and predict population density of connected users. Submitted as a final project report for CSE 824: Advanced Computer Networking and Communications.\n\n        Abstract\n        In this paper we present an in-depth analysis on the usage of the Wi-Fi network located in the College of Engineering building at Michigan State University, with a focus on mapping the population distribution of the network users. The novelty in our work resides in the fact that we are not relying on GPS information from users' phones to provide localization. Instead, a dense collection of access points with known locations are used to identify the locality of connecting users. Our work provides statistical information about the behavior of congestion in the network, shows how the population distribution can be modeled using heatmaps, and offers a network usage prediction model that can represent how a population typically navigates through the building. We believe that this work is beneficial by allowing better understanding of how the current network is being used by the student population, helps identifying where highly congested locations are in the building, and can be used as a tool when determining the optimal deployment locations for future access points. \n        `,\n        year: '2017',\n        tags: [{\n            type: ProjectTags.paper,\n            link: \"https://github.com/gsimon2/population-mapping-via-wifi/blob/main/Population_Mapping_via_Wi_Fi_Network_Analysis__normalsize_The_Final_Report.pdf\"\n        }, {\n            type: ProjectTags.academic\n        }]\n    },\n    {\n        name: 'Bomber Dodger',\n        img: \"https://github.com/gsimon2/bomber-dodger/blob/main/demo.gif?raw=true\",\n        description: \"A surprisingly entertaining game that I submitted as a project for my CSE 471 Media Processing and Multimedia course at Michigan State University. Written in C#.\",\n        year: '2016',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/bomber-dodger\"\n        }, {\n            type: ProjectTags.academic\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Orthopaedic Exercise Feedback System',\n        img: \"https://github.com/gsimon2/ProjectBaymaxWebsite/blob/master/project-overview-diagram.png?raw=true\",\n        description: `\n        A paper that I wrote with a small team of classmates, detailing our work in making a cyber-physical rehabilitation station that consisted of an exercise unit equipped with a touch screen computer that coached patients through their therapy routines. This unit also recorded statistics of the session and reported feedback to a SQL database. Asynchronously therapists could access a website to view progress of sessions and update patient regiments via this online portal. Submitted as a final report to Michigan State’s ECE 480 Senior Design course.\n\n        Abstract\n        During shoulder rehabilitation, doctors and therapists cannot guarantee that patients are completing the proper care while on their own. While at home or unattended in a therapeutic establishment, some patients have a tendency to skip routines and cheat the system, which can make therapy all for naught. Also, if the therapist is not assisting during every exercise, the patient can easily be using improper form. By doing so, incorrect muscles and joints are being worked, which can have a negative impact on the result of therapy. In order to solve this issue, Design Team One of MSU’s ECE 480 class has developed a control system to force correct progress and deliver feedback to the doctors and therapists. By integrating multiple hardware components, the new machine has the capability to halt operation if improper form is sensed. Through software applications, the doctors and therapists will be able to assign customized exercises based on each patient’s needs and the patient will have an interactive screen at the machine which shows these assigned custom exercises. After a therapy routine has been completed, a progress report will be sent automatically to the user who assigned the exercises. Thereby, guaranteeing that the routines have been done correctly and completely.\n        `,\n        year: '2016',\n        tags: [{\n            type: ProjectTags.paper,\n            link: \"https://github.com/gsimon2/ProjectBaymaxWebsite/blob/master/ECE480%20Project%20Final%20Report%20-%202016-12-04.pdf\"\n        }, {\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/ProjectBaymaxWebsite\"\n        },{\n            type: ProjectTags.academic\n        }]\n    },\n]","import { AppBar, Toolbar, useMediaQuery, InputBase, makeStyles, Theme, useTheme, fade, IconButton } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { PageWrapper } from '../../util/sharedElements';\nimport ProjectCard from './ProjectCard';\nimport {projects} from '../../siteInfo/projects';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { IProject } from '../../models/projectModel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CssConstants from '../../constants/CssConstants';\n\nconst GridContainer = styled.div<{numColumns: number}>`\n    display: grid;\n    grid-template-columns: ${props => `repeat(${props.numColumns}, 1fr)`};\n`;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    appBar: {\n        top: CssConstants.totalHeaderHeight\n    },\n    toolbar: {\n        width: '100%',\n        boxSizing: 'border-box',\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      inputRoot: {\n        color: 'inherit',\n        display: 'flex',\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          width: '15ch',\n          '&:focus': {\n            width: '30ch',\n          },\n        },\n      },\n      clearButton: {\n          padding: '0 0.75rem'\n      }\n}));\n\nconst ProjectsPage: React.FC = () => {\n    const [filterText, setFilterText] = useState('');\n    const theme = useTheme<Theme>();\n    const classes = useStyles(theme);\n\n    const isSingleColumnView = useMediaQuery('(max-width:500px)');\n    const isDoubleColumnView = useMediaQuery('(max-width:750px)');\n    const isTripleColumnView = useMediaQuery('(max-width:1000px)');\n\n    const getNumberOfColumns = () => {\n        if (isSingleColumnView) {\n            return 1;\n        }\n\n        if (isDoubleColumnView) {\n            return 2;\n        }\n\n        if (isTripleColumnView) {\n            return 3;\n        }\n\n        return 4;\n    };\n\n    const filterFunc = (p: IProject) => {\n        return p.name.toLowerCase().includes(filterText.toLowerCase())\n            || p.tags?.some(t => t.type.toString().toLowerCase().includes(filterText.toLowerCase()))\n            || p.year.includes(filterText.toLowerCase())\n            || p.description.toLowerCase().includes(filterText.toLowerCase())\n    };\n\n    const projectsToDisplay = projects.filter(filterFunc).map((p, index) => <ProjectCard {...p} key={`card${index}`}/>);\n\n    return (\n        <>\n            <AppBar position=\"sticky\" className={classes.appBar} >\n                <Toolbar variant=\"dense\" className={classes.toolbar}>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase placeholder=\"search...\" \n                                   autoComplete=\"on\"\n                                   value={filterText}\n                                   onChange={e => setFilterText(e.target.value)}\n                                   classes={{root: classes.inputRoot, input: classes.inputInput}}\n                                   endAdornment={!!filterText.length ?\n                                        <IconButton color=\"secondary\" onClick={() => setFilterText('')} title=\"clear\" id=\"clear-filter-text-button\" className={classes.clearButton}>\n                                            <CloseIcon />\n                                        </IconButton>:\n                                        null} />\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <PageWrapper>\n                <GridContainer numColumns={getNumberOfColumns()}>\n                    {projectsToDisplay}\n                </GridContainer>\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default ProjectsPage;","import { makeStyles, Theme, useTheme } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\n\nimport CssConstants from '../constants/CssConstants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    alert: {\n        border: `1px solid ${CssConstants.themes.shared.accentColor}`,\n        boxShadow: theme.shadows[1]\n    },\n    wrapper: {\n        maxWidth: CssConstants.appContentMaxWidth,\n        width: 'fit-content',\n        margin: 'auto'\n    },\n    popoutContainer: {\n        position: 'absolute',\n        zIndex: theme.zIndex.snackbar,\n        width: '100%',\n        marginTop: '2.5rem'\n    }\n}));\n\nconst AlertBanner: React.FC = () => {\n    const [displayAlert, setDisplayAlert] = useState(true);\n    const theme = useTheme<Theme>();\n    const classes = useStyles(theme);\n\n    return (\n        <>\n        { displayAlert ?\n            <div className={classes.popoutContainer}>\n                <div className={classes.wrapper}>\n                    <Alert severity=\"info\" className={classes.alert} onClose={() => setDisplayAlert(false)}>Site is under development - More to come soon! = D</Alert>\n                </div> \n            </div> :\n            null\n        }\n        </>\n    );\n};\n\nexport default AlertBanner;","import { Grow, makeStyles, Theme, useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Constants, { ThemeTypes } from '../../constants/Constants';\nimport CssConstants from '../../constants/CssConstants';\nimport {PageWrapper} from '../../util/sharedElements';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    gridContainerColumns: {\n        display: 'grid',\n        gridTemplateColumns: 'minmax(5rem, 1fr) 1fr'\n    },\n    gridContainerRows: {\n        display: 'grid',\n        gridTemplateRows: 'minmax(5rem, 1fr) 1fr',\n        justifyContent: 'center'\n    },\n    link: {\n        color: CssConstants.linkColor\n    },\n    p: {\n        fontSize: 'small',\n        textAlign: 'center',\n        position: 'absolute',\n        bottom: 0,\n        width: 'calc(100% - 2rem)'\n    },\n    imgDesktop: {\n        display: 'flex',\n        flex: '1 1 auto',\n        \"& img\": {\n            objectFit: 'contain',\n            justifySelf: 'center',\n            minWidth: 0,\n            maxWidth: '30rem',\n            maxHeight: '100%'\n        },\n        \"& p\": {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        \"& a\": {\n            display: 'flex',\n            overflow: 'hidden'\n        }\n    },\n    imgMobile: {\n        maxWidth: '100%',\n        maxHeight: '35rem',\n        \"& img\": {\n            objectFit: 'contain',\n            justifySelf: 'center',\n            minWidth: 0,\n            maxWidth: '30rem',\n            maxHeight: '100%'\n        },\n        \"& p\": {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center'\n        },\n        \"& a\": {\n            display: 'flex',\n            overflow: 'hidden'\n        }\n    }\n}));\n\nconst GithubStatsPage: React.FC = () => {\n    const theme = useTheme<Theme>();\n    const classes = useStyles(theme);\n    const isMobileView = useMediaQuery('(max-width:1000px)');\n    const githubReadmeStatsTheme = theme.palette.type === ThemeTypes.dark ? 'tokyonight' : 'light';\n    const githubOverviewStats = `[![Glen Simon's GitHub stats](https://github-readme-stats.vercel.app/api?username=gsimon2&count_private=true&show_icons=true&theme=${githubReadmeStatsTheme})](${Constants.githubRepoLink})`;\n    const githubLanguageStats = `[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=gsimon2&layout=compact&langs_count=8&exclude_repo=[population-mapping-via-wifi,EvoRos-Enki,EvoRos-Paper,Resume,autorally_platform_instructions,ros_catkin_ws_src,ROS_Gazebo_ErleRover_Guide,ros_catkin_ws_old,ErleRover-Scripts&theme=tokyonight])](${Constants.githubRepoLink})`;\n\n    return (\n        <PageWrapper>\n            <div className={isMobileView ? classes.gridContainerRows : classes.gridContainerColumns}>\n                <Grow in={true} style={{overflow: 'hidden', width: '100%'}}>\n                    <div title={Constants.githubRepoLink}>\n                        <ReactMarkdown className={isMobileView ? classes.imgDesktop : classes.imgMobile}>{githubOverviewStats}</ReactMarkdown>\n                    </div>\n                </Grow>\n                <Grow in={true} style={{overflow: 'hidden', width: '100%'}}>\n                    <div title={Constants.githubRepoLink}>\n                        <ReactMarkdown className={isMobileView ? classes.imgDesktop : classes.imgMobile}>{githubLanguageStats}</ReactMarkdown>\n                    </div>\n                </Grow>\n            </div>\n            <p className={classes.p}>Github stat elements were generated using: <a className={classes.link} href=\"https://github.com/anuraghazra/github-readme-stats\" target=\"_blank\" rel=\"noreferrer\">Github Readme Stats</a></p>\n        </PageWrapper>\n    );\n};\n\nexport default GithubStatsPage;","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Routes } from '../constants/Constants';\nimport Home from './Home';\nimport Resume from './Resume';\nimport ProjectsPage from './projects/ProjectsPage';\nimport AlertBanner from './AlertBanner';\nimport GithubStatsPage from './githubStats/GithubStatsPage';\n\nconst AppContentRouter: React.FC = () => {\n\n    return (\n        <>\n            <AlertBanner />\n            <Route  path={Routes.resume} component={Resume}/>\n            <Route path={Routes.projects} component={ProjectsPage} />\n            <Route path={Routes.githubStats} component={GithubStatsPage} />\n            <Route  exact path={Routes.home} component={Home}/>\n        </>\n    );\n};\n\nexport default AppContentRouter;","import { HashRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from './components/Header/Header';\nimport AppContentRouter from './components/AppContentRouter';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport CssConstants from './constants/CssConstants';\nimport { RootState } from './redux/store';\nimport { useSelector } from 'react-redux';\nimport { ThemeTypes } from './constants/Constants';\n\nconst PageWrapper = styled.div<{themeType: ThemeTypes}>`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.primaryBackground : CssConstants.themes.light.primaryBackground};\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n`;\n\nconst AppContentWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nfunction App() {\n  const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: themeType === ThemeTypes.dark ? 'dark' : 'light'\n        }\n      }),\n    [themeType],\n  );\n  \n  return (\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <PageWrapper themeType={themeType}>\n            <AppContentWrapper>\n              <Header />\n              <AppContentRouter />\n            </AppContentWrapper>\n          </PageWrapper>\n        </HashRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userPreferenceReducer from './userPreferencesSlice';\n\nconst store = configureStore({\n    reducer: {\n        userPreferences: userPreferenceReducer\n    }\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}