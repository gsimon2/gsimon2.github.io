{"version":3,"sources":["constants/Constants.ts","constants/CssConstants.ts","redux/userPreferencesSlice.ts","components/Header/ThemeSelector.tsx","components/Header/SettingsMenu.tsx","components/Header/Header.tsx","assets/glen-mt.jpg","util/sharedElements.tsx","components/Home.tsx","components/Resume.tsx","components/projects/TagDisplay.tsx","components/projects/ProjectTagsDisplay.tsx","components/projects/ProjectModal.tsx","components/projects/ProjectCard.tsx","siteInfo/projects.ts","components/projects/ProjectsPage.tsx","components/AlertBanner.tsx","components/AppContentRouter.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["ThemeTypes","Routes","ProjectTags","shared","accentColor","dark","primaryBackground","secondaryBackground","textColor","light","initialState","theme","prefersLightTheme","window","matchMedia","matches","storedUserTheme","themeCookie","document","cookie","split","filter","item","trim","startsWith","Constants","length","e","console","error","getThemeFromCookie","getUsersThemePreference","userPreferenceSlice","createSlice","name","reducers","updateTheme","state","action","newTheme","setThemeCookie","payload","actions","Wrapper","styled","div","ThemeSelector","themeType","useSelector","userPreferences","dispatch","useDispatch","ToggleButtonGroup","value","exclusive","onChange","event","aria-label","ToggleButton","title","MenuContainer","SettingsMenu","React","useState","anchorEl","setAnchorEl","isDesktopView","useMediaQuery","open","Boolean","id","undefined","Button","aria-describedby","variant","color","onClick","currentTarget","startIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","HeaderEl","header","CssConstants","props","HeaderBorder","LeftHeaderEl","RightHeaderEl","Header","location","useLocation","pathname","selectedTab","setSelectedTab","className","BottomNavigation","showLabels","BottomNavigationAction","component","Link","label","home","icon","to","projects","Collections","resume","Description","PageWrapper","Img","img","MobileImg","DesktopImg","GridContainerColumns","GridContainerRows","TextContainer","span","Home","GridContainer","ImageElemnt","Grow","in","src","profileImag","ResumeIFrame","iframe","ContentWrapper","Resume","isLoading","setIsLoading","CircularProgress","onLoad","IconWrapper","TagDisplay","text","link","isCompactView","expandedElement","href","target","rel","TypeTagsWrapperCompact","TypeTyagsWrapperExpanded","ProjectTagsDisplay","tags","tagsElements","map","t","type","github","foundry","school","paper","code","ModalWrapper","palette","shadows","spacing","h2","ImgWrapper","FullScreenImgWrapper","FullScreenImg","P","p","useStyles","makeStyles","modal","display","overflow","padding","ProjectModal","project","isOpen","useTheme","classes","showFullScreenImg","setShowFullScreenImg","Modal","onRendered","getElementById","focus","alt","year","description","DescriptionWrapper","media","height","CardTopWrapper","YearSpan","ProjectCard","displayModal","setDisplayModal","Card","CardMedia","image","CardContent","numColumns","ProjectsPage","isSingleColumnView","isDoubleColumnView","isTripleColumnView","index","key","AlertWrapper","AlertBanner","displayAlert","setDisplayAlert","Alert","severity","AppContentRouter","path","exact","AppContentWrapper","App","useMemo","createMuiTheme","ThemeProvider","store","configureStore","reducer","userPreferenceReducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.dfb2d161.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport enum ThemeTypes {\n    light = 'light',\n    dark = 'dark'\n};\n\nexport enum Routes {\n    home = \"/\",\n    resume = \"/resume\",\n    projects = \"/projects\"\n};\n\nexport enum ProjectTags {\n    github,\n    foundry,\n    school,\n    paper,\n    code\n}\n\nexport default {\n    resumeIframeSource: \"https://docs.google.com/gview?url=https://github.com/gsimon2/Resume/raw/main/Resume.pdf&embedded=true\",\n    themeKey: \"themeType\"\n};","/* eslint-disable */\nexport default {\n    headerHeight: '3.5rem',\n    headerBorderWidth: '0.0625rem',\n    totalHeaderHeight: '3.5625rem',\n    appContentMaxWidth: '80rem',\n    appContentMinWidth: '450px',\n    themes: {\n        shared: {\n            accentColor: '#3f51b5'\n        },\n        dark: {\n            primaryBackground: '#282e3a',\n            secondaryBackground: '#181d27',\n            textColor: 'lightgray'\n        },\n        light: {\n            primaryBackground: '#dedddd',\n            secondaryBackground: '#e8f4fd',\n            textColor: 'black'\n        }\n    }\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport Constants, { ThemeTypes } from '../constants/Constants';\n\ninterface IUserPreferences {\n    theme: ThemeTypes\n};\n\nconst getThemeFromCookie = () => {\n    try {\n       const themeCookie: string[] = document.cookie.split(';').filter(item => item.trim().startsWith(`${Constants.themeKey}=`));\n       if (themeCookie?.length) {\n          return themeCookie[0].split('=')[1].trim();\n       }\n       return null;\n    } catch (e) {\n       console.error('Failed to get theme cookie: ', e);\n       return null;\n    }\n };\n\n const setThemeCookie = (newTheme: ThemeTypes) => {\n     try\n     {\n        document.cookie = `${Constants.themeKey}=${newTheme}`;\n     } catch (e) {\n         console.error('Fail to set theme cookie: ', e);\n     }\n };\n  \n  \n const getUsersThemePreference = (): ThemeTypes => {\n    const prefersLightTheme = window.matchMedia('(prefers-color-scheme: light)').matches;\n    const prefersDarkTheme = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const storedUserTheme = getThemeFromCookie();\n  \n    if (storedUserTheme) {\n       return storedUserTheme === ThemeTypes.dark ? ThemeTypes.dark : ThemeTypes.light;\n    } else if (prefersLightTheme) {\n       return ThemeTypes.light;\n    } else if (prefersDarkTheme) {\n       return ThemeTypes.dark;\n    }\n  \n    return ThemeTypes.dark;\n };\n\n const initialState: IUserPreferences = {\n    theme: getUsersThemePreference()\n};\n \n\nexport const userPreferenceSlice = createSlice({\n    name: 'userPreferences',\n    initialState,\n    reducers: {\n        updateTheme: (state, action: PayloadAction<ThemeTypes>) => {\n            setThemeCookie(action.payload);\n            state.theme = action.payload;\n        }\n    }\n});\n\nexport const {updateTheme} = userPreferenceSlice.actions;\nexport default userPreferenceSlice.reducer;","import { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeTypes } from '../../constants/Constants';\nimport { RootState } from '../../redux/store';\nimport { updateTheme } from '../../redux/userPreferencesSlice';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst ThemeSelector: React.FC = () => {\n    const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n    const dispatch = useDispatch();\n\n    const handleThemeChange = (event: React.MouseEvent<HTMLElement>, newTheme: ThemeTypes) => {\n        dispatch(updateTheme(newTheme));\n    };\n   \n    return (\n        <Wrapper>\n            <span>Theme</span>\n            <ToggleButtonGroup value={themeType} exclusive onChange={handleThemeChange} aria-label=\"Theme Selection\">\n                <ToggleButton value={ThemeTypes.dark} aria-label=\"Dark Theme\" title=\"Dark Theme\">\n                    <NightsStayIcon />\n                </ToggleButton>\n                <ToggleButton value={ThemeTypes.light} aria-label=\"Light Theme\" title=\"Light Theme\">\n                    <Brightness7Icon />\n                </ToggleButton>\n            </ToggleButtonGroup>\n        </Wrapper>\n    );\n};\n\nexport default ThemeSelector;","import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ThemeSelector from './ThemeSelector';\nimport { useMediaQuery } from '@material-ui/core';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 0.5rem;\n    height: 100%;\n`;\n\nconst MenuContainer = styled.div`   \n    width: 12.5rem;\n    padding: 0.5rem;\n    box-sizing: border-box;\n`;\n\nconst SettingsMenu: React.FC = () => {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const isDesktopView = useMediaQuery('(min-width:650px)');\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'settings-popover' : undefined;\n\n  return (\n    <Wrapper>\n        <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick} startIcon={<SettingsIcon />} title=\"Settings\">\n            {isDesktopView && \"Settings\"}\n        </Button>\n        <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        >\n            <MenuContainer>\n                <ThemeSelector />\n            </MenuContainer>\n        </Popover>\n    </Wrapper>\n  );\n};\n\nexport default SettingsMenu;","import { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Routes, ThemeTypes } from '../../constants/Constants';\nimport { Description, Home, Collections } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport CssConstants from '../../constants/CssConstants';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport SettingsMenu from './SettingsMenu';\n\nconst HeaderEl = styled.header<{themeType: ThemeTypes}>`\n    display: flex;\n    height: ${CssConstants.headerHeight};\n    background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n\n    >div {\n        background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n    }\n`;\n\nconst HeaderBorder = styled.div`\n    height: ${CssConstants.headerBorderWidth};\n    background-color: ${CssConstants.themes.shared.accentColor};\n`;\n\nconst LeftHeaderEl = styled.div`\n    width: 10rem;\n    margin-right: auto;\n`;\n\nconst RightHeaderEl = styled.div`\n    width: 10rem;\n    margin-left: auto;\n`;\n\nconst Header: React.FC = () => {\n    const location = useLocation();\n    const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n    const [selectedTab, setSelectedTab] = useState<string>(location.pathname);\n\n    React.useEffect(() => {\n        setSelectedTab(location.pathname);\n    }, [location.pathname]);\n\n    return (\n        <>\n            <HeaderEl className=\"App-header\" themeType={themeType} >\n                <LeftHeaderEl/>\n                <BottomNavigation value={selectedTab} showLabels >\n                    <BottomNavigationAction component={Link} label=\"Home\" value={Routes.home} icon={<Home />} to={Routes.home} />\n                    <BottomNavigationAction component={Link} label=\"Projects\" value={Routes.projects} icon={<Collections />} to={Routes.projects} />\n                    <BottomNavigationAction component={Link} label=\"Resume\" value={Routes.resume} icon={<Description />} to={Routes.resume} />\n                </BottomNavigation>\n                <RightHeaderEl>\n                    <SettingsMenu />\n                </RightHeaderEl>\n            </HeaderEl>\n            <HeaderBorder />\n        </>\n    );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/glen-mt.74ceae32.jpg\";","import styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nexport const PageWrapper = styled.div`\n    width: 100%;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: auto;\n    padding: 2rem 1rem;\n    box-sizing: border-box;\n`;\n","import { Grow, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport profileImag from '../assets/glen-mt.jpg';\nimport {PageWrapper} from '../util/sharedElements';\n\nconst Img = styled.img`\n    border-radius: 20%;\n    object-fit: contain;\n    justify-self: center;\n`;\n\nconst MobileImg = styled(Img)`\n    min-width: 0;\n    max-width: 22rem;\n    max-height: 100%;\n`;\n\nconst DesktopImg = styled(Img)`\n    max-width: 100%;\n    max-height: 35rem;\n`;\n\nconst GridContainerColumns = styled.div`\n    display: grid;\n    grid-template-columns: minmax(5rem, 1fr) 1fr;\n`;\n\nconst GridContainerRows = styled.div`\n    display: grid;\n    grid-template-rows: minmax(5rem, 1fr) 1fr;\n`;\n\nconst TextContainer = styled.span<{isDesktopView: boolean}>`\n    margin: ${props => props.isDesktopView ? '4rem 1rem 0 4rem' : '2rem auto'};\n    word-break: break-word;\n`;\n\nconst Home: React.FC = () => {\n    const isDesktopView = useMediaQuery('(min-width:650px)');\n    const GridContainer = isDesktopView ? GridContainerColumns : GridContainerRows;\n    const ImageElemnt = isDesktopView ? DesktopImg : MobileImg ;\n\n    return (\n        <>\n            <PageWrapper>\n                <GridContainer>\n                    <Grow in={true}>\n                        <ImageElemnt src={profileImag} />\n                    </Grow>\n                    <Grow in={true}>\n                        <TextContainer isDesktopView={isDesktopView}>Hi I'm Glen! Eventually I will talk about myself here</TextContainer>\n                    </Grow>\n                </GridContainer>\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default Home;","import { CircularProgress } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Constants from '../constants/Constants';\nimport CssConstants from '../constants/CssConstants';\n\nconst ResumeIFrame = styled.iframe`\n    height: 100%;\n`;\n\nconst ContentWrapper = styled.div`\n    width: 100%;\n    position: absolute;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Resume: React.FC = () => {\n    const [isLoading, setIsLoading] = useState(true);\n\n    return (\n        <>\n            {isLoading && <ContentWrapper><CircularProgress /></ContentWrapper>}\n            <ResumeIFrame title=\"ResumeWrapper\" src={Constants.resumeIframeSource} onLoad={() => setIsLoading(false)} />\n        </>\n    );\n};\n\nexport default Resume;","import React from 'react';\nimport styled from 'styled-components';\n\nconst IconWrapper = styled.div`\n    padding: 0.25rem;\n    display: flex;\n\n    a {\n        margin-left: 0.5rem;\n        color: #3f51b5 !important;\n    }\n\n    span {\n        margin-left: 0.5rem;\n    }\n`;\n\nconst TagDisplay: React.FC<ITagDisplayProps> = ({text, icon, link, isCompactView}) => {\n    const title = link ? isCompactView ? text: link : text;\n    const expandedElement = link ? <a href={link} target=\"_blank\" rel=\"noreferrer\">{text}</a> : <span>{text}</span>;\n\n    return (\n        <IconWrapper title={title}>\n            {icon}\n            {!isCompactView && expandedElement}\n        </IconWrapper>\n    );\n};\n\nexport interface ITagDisplayProps {\n    text: string;\n    icon: any;\n    link?: string;\n    isCompactView: boolean;\n}\n\nexport default TagDisplay;","import React from 'react';\nimport styled from 'styled-components';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { ProjectTags } from \"../../constants/Constants\";\nimport CasinoIcon from '@material-ui/icons/Casino';\nimport { IProjectTag } from '../../models/projectModel';\nimport TagDisplay from './TagDisplay';\nimport SchoolIcon from '@material-ui/icons/School';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst TypeTagsWrapperCompact = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin: 0 -0.5rem -1rem 0;\n`;\n\nconst TypeTyagsWrapperExpanded = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\n\nconst ProjectTagsDisplay: React.FC<IProjectTagsDisplayProps> = ({tags, isCompactView = false}) => {\n    const Wrapper = isCompactView ? TypeTagsWrapperCompact : TypeTyagsWrapperExpanded;\n\n    const tagsElements = tags.map(t => {\n        switch (t.type) {\n            case ProjectTags.github:\n                return <TagDisplay text=\"Github Repo\" icon={<GitHubIcon />} link={t.link} isCompactView={isCompactView} key=\"github-tag\" />;\n            case ProjectTags.foundry:\n                return <TagDisplay text=\"Foundry Module\" icon={<CasinoIcon />} link={t.link} isCompactView={isCompactView} key=\"foundry-tag\" />;\n            case ProjectTags.school:\n                return <TagDisplay text=\"School Project\" icon={<SchoolIcon />} isCompactView={isCompactView} key=\"school-tag\" />;\n            case ProjectTags.paper:\n                return <TagDisplay text=\"Paper\" icon={<DescriptionIcon />} link={t.link} isCompactView={isCompactView} key=\"paper-tag\" />\n            case ProjectTags.code:\n                return <TagDisplay text=\"Coding Project\" icon={<CodeIcon />} isCompactView={isCompactView} key=\"code-tag\" />\n            default:\n                return null;\n        }\n    });\n\n    return (\n        <Wrapper>\n            {tagsElements}\n      </Wrapper>\n    );\n};\n\nexport interface IProjectTagsDisplayProps {\n    tags: IProjectTag[];\n    isCompactView?: boolean;\n}\n\nexport default ProjectTagsDisplay;","import { makeStyles, Modal, Theme, useTheme } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ThemeTypes } from '../../constants/Constants';\nimport { IProject } from '../../models/projectModel';\nimport CssConstants from '../../constants/CssConstants';\nimport ProjectTagsDisplay from './ProjectTagsDisplay';\n\nconst ModalWrapper = styled.div<{theme: Theme}>`\n    margin: auto;\n    min-width: 0;\n    width: 70vw;\n    background-color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n    color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n    border: 2px solid;\n    border-color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n    box-shadow: ${props => props.theme.shadows[5]};\n    padding: ${props => props.theme.spacing(2, 4, 3)};\n    border-radius: 1rem;\n`;\n\nconst Header = styled.h2`\n    text-align: center;\n`;\n\nconst ImgWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    cursor: zoom-in;\n`;\n\nconst Img = styled.img`\n    max-width: min(60vw, ${CssConstants.appContentMaxWidth});\n    max-height: 30rem;\n`;\n\nconst FullScreenImgWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 9999;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: black;\n    cursor: zoom-out;\n`;\n\nconst FullScreenImg = styled.img`\n    width: auto;\n    height: auto;\n    max-width: 100vw;\n    object-fit: contain;\n`;\n\nconst P = styled.p`\n    white-space: pre-line;\n`;\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        overflow: 'auto',\n        padding: '1rem'\n    },\n  });\n\nconst ProjectModal: React.FC<IProjectModalProps> = ({project, isOpen, onClose}) => {\n    const theme = useTheme<Theme>();\n    const classes = useStyles();\n    const [showFullScreenImg, setShowFullScreenImg] = useState(false);\n\n    const onModalRender = () => {\n        document.getElementById('project-details-modal-description')?.focus();\n    };\n  \n    return (\n        <>\n            <Modal open={isOpen} onClose={onClose} className={classes.modal} onRendered={onModalRender}>\n                <ModalWrapper theme={theme}>\n                    <Header id=\"project-details-modal-title\">{project.name}</Header>\n                    {project.img && <ImgWrapper onClick={() => setShowFullScreenImg(true)}><Img src={project.img} alt={`${project.name}`} /></ImgWrapper>}\n                    <span>{project.year}</span>\n                    <P id=\"project-details-modal-description\">\n                        {project.description}\n                    </P>\n                    {project.tags && <ProjectTagsDisplay tags={project.tags} />}\n                </ModalWrapper>\n            </Modal>\n            <Modal open={showFullScreenImg} onClose={() => setShowFullScreenImg(false)}>\n                <FullScreenImgWrapper onClick={() => setShowFullScreenImg(false) }>\n                    <FullScreenImg src={project.img} alt={`${project.name}-fullscreen`}  />\n                </FullScreenImgWrapper>\n            </Modal>\n        </>\n    );\n};\n\nexport interface IProjectModalProps {\n    project: IProject;\n    isOpen: boolean;\n    onClose(): void;\n}\n\nexport default ProjectModal;","import { Card, CardContent, CardMedia, Grow, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { IProject } from '../../models/projectModel';\nimport ProjectTagsDisplay from './ProjectTagsDisplay';\nimport ProjectModal from './ProjectModal';\n\nconst Wrapper = styled.div`\n    padding: 1rem;\n    box-sizing: border-box;\n    cursor: pointer;\n`;\n\nconst DescriptionWrapper = styled.p`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    font-size: small;\n`;\n\nconst useStyles = makeStyles({\n    media: {\n      height: 140\n    },\n  });\n\n  const CardTopWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n  `;\n\n  const YearSpan = styled.span`\n    font-size: small;\n  `;\n\nconst ProjectCard: React.FC<IProject> = (props) => {\n    const {name, img, description, year, tags} = props;\n    const [displayModal, setDisplayModal] = useState(false);\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grow in={true}>\n                <Wrapper>\n                    <Card variant=\"outlined\" onClick={() => setDisplayModal(true)}>\n                        {img && <CardMedia \n                            className={classes.media}\n                            image={img}\n                            title={name}\n                        />}\n                        <CardContent>\n                            <CardTopWrapper>\n                                <span>\n                                    {name}\n                                </span>\n                                <YearSpan>\n                                    {year}\n                                </YearSpan>\n                            </CardTopWrapper>\n                            <DescriptionWrapper>\n                                {description}\n                            </DescriptionWrapper>\n                            {tags?.length && <ProjectTagsDisplay tags={tags} isCompactView={true} />}\n                        </CardContent>\n                    </Card>\n                </Wrapper>\n            </Grow>\n            <ProjectModal project={props} isOpen={displayModal} onClose={() => setDisplayModal(false)} />\n        </>\n    );\n};\n\nexport default ProjectCard;","import { ProjectTags } from \"../constants/Constants\";\nimport { IProject } from \"../models/projectModel\";\n\nexport const projects: IProject[] = [\n    {\n        name: 'Dramatic Rolls',\n        img: \"https://github.com/gsimon2/dramatic-rolls/blob/main/natty20.gif?raw=true\",\n        description: \"A module for FoundryVtt that addes a little excitement to natural 20s and natural 1s.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/dramatic-rolls\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/dramatic-rolls\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Playlist Drag and Drop',\n        img: \"https://github.com/gsimon2/playlist-drag-and-drop/blob/main/playlist-drag-and-drop-demo.gif?raw=true\",\n        description: \"A module for FoundryVtt that allows dragging playlist soundtracks from the sidebar and dropping them onto the map as ambient sounds. Default sound volume, radius, easing, and repeat settings can be configured via the configure settings menu.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/playlist-drag-and-drop\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/playlist-drag-and-drop\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Pf2e Inspire Courage',\n        img: \"https://github.com/gsimon2/pf2e-inspire-courage/blob/main/demo.gif?raw=true\",\n        description: \"A module for FoundryVtt that adds a button to character token HUDs that allows for the toggling of Inspire Courage. This utilizes the PF2e \\\"Inspire Courage\\\" spell effect. Only applies to to actual character actors, not NPCs due to how spell effect interact with their sheet. When inspire courage is active, the inspire courage effect icon will appear on the token and the spell effect will be added to the actor's sheet. The bonus to attack and damage rolls will automatically apply.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/pf2e-inspire-courage\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/pf2e-inspire-courage\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Hide Player UI',\n        description: \"A module for FoundryVtt that the GM can enable to hide all joining player's control UI. The intended use for this is when the player screen is being used for displaying the maps during in-person gaming.\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/hide-player-ui\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/hide-player-ui\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Close Player Art',\n        img: \"https://github.com/gsimon2/close-player-art/blob/main/close-art.gif?raw=true\",\n        description: \"A module for FoundryVtt that adds a configurable hot key (Default ` - backtick) for the GM to close open image popouts on player screens\",\n        year: '2021',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/close-player-art\"\n        }, {\n            type: ProjectTags.foundry,\n            link: \"https://foundryvtt.com/packages/close-player-art\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Applying Evolution and Novelty Search to Enhance the Resilience of Autonomous Systems',\n        img: \"https://github.com/gsimon2/EvoRos-Enki/blob/main/fig_evoros_enki_dfd.jpg?raw=true\",\n        description: `\n        A paper I contributed to during graduate school. It was publiched in the \"IEEE/ACM 14th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)\", Montreal, QC, Canada in May 2019.\n\n        Abstract\n        We investigate the integration of evolutionary algorithms and novelty search in order to improve the performance and resilience of autonomous systems. We have developed two tools for this purpose: Evo-ROS and Enki. Evo-ROS combines evolutionary search with physics-based simulations of autonomous systems whose software infrastructure is based on the Robot Operating System (ROS). Enki uses novelty search to discover operational scenarios that lead to the most diverse behavior in the target system. Combining these tools yields an automated approach to explore the operational landscape of the target system, identify regions of poor performance, and evolve system parameters that better respond to adverse situations. In this paper, we present results of a case study of the throttle controller on AutoRally, a 1:5-scale autonomous vehicle designed by researchers at Georgia Tech for the study of aggressive autonomous driving. Preliminary experiments demonstrate the ability of the proposed methods to identify and characterize input speed signals that cause the existing controller to perform poorly. The ability to identify these troublesome signals enables development of a control system capable of handling a wider range of conditions by autonomously switching among controller modes that are optimized for different conditions.\n        `,\n        year: '2019',\n        tags: [{\n            type: ProjectTags.paper,\n            link: \"https://github.com/gsimon2/EvoRos-Enki/blob/main/Enki___Evo_ROS_Integration.pdf\"\n        }]\n    },\n    {\n        name: 'Evo-Ros: Integration Evolution and the Robot Operating System',\n        img: \"https://github.com/gsimon2/EvoRos-Paper/blob/main/Figures/Workflow.png?raw=true\",\n        description: `\n        A paper that I was lead author on during graduate school. It was published in the \"Proceedings of the Genetic and Evolutionary Computation Conference Companion\", pp.1386-1393, Kyoto, Japan in July 2018. \n\n        Abstract\n        In this paper, we describe the Evo-ROS framework, which is intended to help bridge the gap between the evolutionary and traditional robotics communities.\n        Evo-ROS combines an evolutionary algorithm with individual physics-based evaluations conducted using the Robot Operating System (ROS) and the Gazebo simulation environment.\n        Our goals in developing Evo-ROS are to (1) provide researchers in evolutionary robotics with access to the extensive support for real-world components and capabilities developed by the ROS community and (2) \n        enable ROS developers, and more broadly robotics researchers, to take advantage of evolutionary search during design and testing.\n        We describe the details of the Evo-ROS structure and operation, followed by\n        presentation of a case study using Evo-ROS to optimize placement of sonar sensors on\n        unmanned ground vehicles that can experience reduced sensing capability due\n        to component failures and physical damage.\n        The case study provides insights into the current capabilities and identifies areas \n        for future enhancements.  \n        `,\n        year: '2018',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/EvoRos-Paper\"\n        }, {\n            type: ProjectTags.paper,\n            link: \"https://gsimon2.github.io/EvoRos-Paper/\"\n        }]\n    },\n    {\n        name: 'Custom Fitbit Watchface',\n        img: \"https://github.com/gsimon2/fitbit-watchface/blob/main/demo.gif?raw=true\",\n        description: \"A fun custom Fitbit watch face I designed for my fiancé while we were dating. It has a simple watch face with a background image of our dog, Loki. If you click the sides of the screen in a pre-defined sequence, then a custom message would appear on the screen.\",\n        year: '2018',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/fitbit-watchface\"\n        },{\n            type: ProjectTags.code\n        }]\n    },\n    {\n        name: 'Bomber Dodger',\n        img: \"https://github.com/gsimon2/bomber-dodger/blob/main/demo.gif?raw=true\",\n        description: \"A surprisingly entertaining game that I submitted as a project for my CSE 471 Media Processing and Multimedia course at Michigan State University. Written in C#.\",\n        year: '2016',\n        tags: [{\n            type: ProjectTags.github,\n            link: \"https://github.com/gsimon2/bomber-dodger\"\n        }, {\n            type: ProjectTags.school\n        },{\n            type: ProjectTags.code\n        }]\n    }\n]","import { useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PageWrapper } from '../../util/sharedElements';\nimport ProjectCard from './ProjectCard';\nimport {projects} from '../../siteInfo/projects';\n\nconst GridContainer = styled.div<{numColumns: number}>`\n    display: grid;\n    grid-template-columns: ${props => `repeat(${props.numColumns}, 1fr)`};\n`;\n\nconst ProjectsPage: React.FC = () => {\n    const isSingleColumnView = useMediaQuery('(max-width:500px)');\n    const isDoubleColumnView = useMediaQuery('(max-width:750px)');\n    const isTripleColumnView = useMediaQuery('(max-width:1000px)');\n\n    const getNumberOfColumns = () => {\n        if (isSingleColumnView) {\n            return 1;\n        }\n\n        if (isDoubleColumnView) {\n            return 2;\n        }\n\n        if (isTripleColumnView) {\n            return 3;\n        }\n\n        return 4;\n    };\n\n    return (\n        <PageWrapper>\n            <GridContainer numColumns={getNumberOfColumns()}>\n                {projects.map((p, index) => <ProjectCard {...p} key={`card${index}`}/>)}\n            </GridContainer>\n        </PageWrapper>\n    );\n};\n\nexport default ProjectsPage;","import { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nconst AlertWrapper = styled.div`\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: 1rem auto 0;\n`;\n\nconst AlertBanner: React.FC = () => {\n    const [displayAlert, setDisplayAlert] = useState(true);\n\n    return (\n        <>\n        { displayAlert ?\n            <AlertWrapper>\n                <Alert severity=\"info\" onClose={() => setDisplayAlert(false)}>Site is under development - More to come soon! = D</Alert>\n            </AlertWrapper> :\n            null\n        }\n        </>\n    );\n};\n\nexport default AlertBanner;","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Routes } from '../constants/Constants';\nimport Home from './Home';\nimport Resume from './Resume';\nimport ProjectsPage from './projects/ProjectsPage';\nimport AlertBanner from './AlertBanner';\n\nconst AppContentRouter: React.FC = () => {\n\n    return (\n        <>\n            <AlertBanner />\n            <Route  path={Routes.resume} component={Resume}/>\n            <Route path={Routes.projects} component={ProjectsPage} />\n            <Route  exact path={Routes.home} component={Home}/>\n        </>\n    );\n};\n\nexport default AppContentRouter;","import { HashRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from './components/Header/Header';\nimport AppContentRouter from './components/AppContentRouter';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport CssConstants from './constants/CssConstants';\nimport { RootState } from './redux/store';\nimport { useSelector } from 'react-redux';\nimport { ThemeTypes } from './constants/Constants';\n\nconst PageWrapper = styled.div<{themeType: ThemeTypes}>`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.primaryBackground : CssConstants.themes.light.primaryBackground};\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n`;\n\nconst AppContentWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nfunction App() {\n  const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: themeType === ThemeTypes.dark ? 'dark' : 'light'\n        }\n      }),\n    [themeType],\n  );\n  \n  return (\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <PageWrapper themeType={themeType}>\n            <AppContentWrapper>\n              <Header />\n              <AppContentRouter />\n            </AppContentWrapper>\n          </PageWrapper>\n        </HashRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userPreferenceReducer from './userPreferencesSlice';\n\nconst store = configureStore({\n    reducer: {\n        userPreferences: userPreferenceReducer\n    }\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}