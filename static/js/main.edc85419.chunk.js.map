{"version":3,"sources":["constants/Constants.ts","constants/CssConstants.ts","redux/userPreferencesSlice.ts","components/Header/ThemeSelector.tsx","components/Header/SettingsMenu.tsx","components/Header/Header.tsx","assets/glen-mt.jpg","util/sharedElements.tsx","components/Home.tsx","components/Resume.tsx","components/projects/ProjectTagsDisplay.tsx","components/projects/ProjectCard.tsx","siteInfo/projects.ts","components/projects/ProjectsPage.tsx","components/AlertBanner.tsx","components/AppContentRouter.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["ThemeTypes","Routes","ProjectTags","shared","accentColor","dark","primaryBackground","secondaryBackground","textColor","light","initialState","theme","prefersLightTheme","window","matchMedia","matches","storedUserTheme","themeCookie","document","cookie","split","filter","item","trim","startsWith","Constants","length","e","console","error","getThemeFromCookie","getUsersThemePreference","userPreferenceSlice","createSlice","name","reducers","updateTheme","state","action","newTheme","setThemeCookie","payload","actions","Wrapper","styled","div","ThemeSelector","themeType","useSelector","userPreferences","dispatch","useDispatch","ToggleButtonGroup","value","exclusive","onChange","event","aria-label","ToggleButton","title","MenuContainer","SettingsMenu","React","useState","anchorEl","setAnchorEl","isDesktopView","useMediaQuery","open","Boolean","id","undefined","Button","aria-describedby","variant","color","onClick","currentTarget","startIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","HeaderEl","header","CssConstants","props","HeaderBorder","LeftHeaderEl","RightHeaderEl","Header","location","useLocation","pathname","selectedTab","setSelectedTab","className","BottomNavigation","showLabels","BottomNavigationAction","component","Link","label","home","icon","to","projects","Collections","resume","Description","PageWrapper","Img","img","MobileImg","DesktopImg","GridContainerColumns","GridContainerRows","TextContainer","span","Home","GridContainer","ImageElemnt","Grow","in","src","profileImag","ResumeIFrame","iframe","ContentWrapper","Resume","isLoading","setIsLoading","CircularProgress","onLoad","TypeTagsWrapper","IconWrapper","ProjectTagsDisplay","tags","includes","github","foundry","useStyles","makeStyles","media","height","ModalWrapper","palette","type","shadows","spacing","ProjectCard","description","displayModal","setDisplayModal","useTheme","classes","Card","CardMedia","image","CardContent","Modal","numColumns","ProjectsPage","isSingleColumnView","isDoubleColumnView","isTripleColumnView","map","p","index","key","AlertWrapper","AlertBanner","displayAlert","setDisplayAlert","Alert","severity","AppContentRouter","path","exact","AppContentWrapper","App","useMemo","createMuiTheme","ThemeProvider","store","configureStore","reducer","userPreferenceReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edc85419.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport enum ThemeTypes {\n    light = 'light',\n    dark = 'dark'\n};\n\nexport enum Routes {\n    home = \"/\",\n    resume = \"/resume\",\n    projects = \"/projects\"\n};\n\nexport enum ProjectTags {\n    github,\n    foundry\n}\n\nexport default {\n    resumeIframeSource: \"https://docs.google.com/gview?url=https://github.com/gsimon2/Resume/raw/main/Resume.pdf&embedded=true\",\n    themeKey: \"themeType\"\n};","/* eslint-disable */\nexport default {\n    headerHeight: '3.5rem',\n    headerBorderWidth: '0.0625rem',\n    totalHeaderHeight: '3.5625rem',\n    appContentMaxWidth: '80rem',\n    appContentMinWidth: '450px',\n    themes: {\n        shared: {\n            accentColor: '#3f51b5'\n        },\n        dark: {\n            primaryBackground: '#282e3a',\n            secondaryBackground: '#181d27',\n            textColor: 'lightgray'\n        },\n        light: {\n            primaryBackground: '#dedddd',\n            secondaryBackground: '#e8f4fd',\n            textColor: 'black'\n        }\n    }\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport Constants, { ThemeTypes } from '../constants/Constants';\n\ninterface IUserPreferences {\n    theme: ThemeTypes\n};\n\nconst getThemeFromCookie = () => {\n    try {\n       const themeCookie: string[] = document.cookie.split(';').filter(item => item.trim().startsWith(`${Constants.themeKey}=`));\n       if (themeCookie?.length) {\n          return themeCookie[0].split('=')[1].trim();\n       }\n       return null;\n    } catch (e) {\n       console.error('Failed to get theme cookie: ', e);\n       return null;\n    }\n };\n\n const setThemeCookie = (newTheme: ThemeTypes) => {\n     try\n     {\n        document.cookie = `${Constants.themeKey}=${newTheme}`;\n     } catch (e) {\n         console.error('Fail to set theme cookie: ', e);\n     }\n };\n  \n  \n const getUsersThemePreference = (): ThemeTypes => {\n    const prefersLightTheme = window.matchMedia('(prefers-color-scheme: light)').matches;\n    const prefersDarkTheme = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const storedUserTheme = getThemeFromCookie();\n  \n    if (storedUserTheme) {\n       return storedUserTheme === ThemeTypes.dark ? ThemeTypes.dark : ThemeTypes.light;\n    } else if (prefersLightTheme) {\n       return ThemeTypes.light;\n    } else if (prefersDarkTheme) {\n       return ThemeTypes.dark;\n    }\n  \n    return ThemeTypes.dark;\n };\n\n const initialState: IUserPreferences = {\n    theme: getUsersThemePreference()\n};\n \n\nexport const userPreferenceSlice = createSlice({\n    name: 'userPreferences',\n    initialState,\n    reducers: {\n        updateTheme: (state, action: PayloadAction<ThemeTypes>) => {\n            setThemeCookie(action.payload);\n            state.theme = action.payload;\n        }\n    }\n});\n\nexport const {updateTheme} = userPreferenceSlice.actions;\nexport default userPreferenceSlice.reducer;","import { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeTypes } from '../../constants/Constants';\nimport { RootState } from '../../redux/store';\nimport { updateTheme } from '../../redux/userPreferencesSlice';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst ThemeSelector: React.FC = () => {\n    const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n    const dispatch = useDispatch();\n\n    const handleThemeChange = (event: React.MouseEvent<HTMLElement>, newTheme: ThemeTypes) => {\n        dispatch(updateTheme(newTheme));\n    };\n   \n    return (\n        <Wrapper>\n            <span>Theme</span>\n            <ToggleButtonGroup value={themeType} exclusive onChange={handleThemeChange} aria-label=\"Theme Selection\">\n                <ToggleButton value={ThemeTypes.dark} aria-label=\"Dark Theme\" title=\"Dark Theme\">\n                    <NightsStayIcon />\n                </ToggleButton>\n                <ToggleButton value={ThemeTypes.light} aria-label=\"Light Theme\" title=\"Light Theme\">\n                    <Brightness7Icon />\n                </ToggleButton>\n            </ToggleButtonGroup>\n        </Wrapper>\n    );\n};\n\nexport default ThemeSelector;","import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ThemeSelector from './ThemeSelector';\nimport { useMediaQuery } from '@material-ui/core';\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 0.5rem;\n    height: 100%;\n`;\n\nconst MenuContainer = styled.div`   \n    width: 12.5rem;\n    padding: 0.5rem;\n    box-sizing: border-box;\n`;\n\nconst SettingsMenu: React.FC = () => {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const isDesktopView = useMediaQuery('(min-width:650px)');\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'settings-popover' : undefined;\n\n  return (\n    <Wrapper>\n        <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick} startIcon={<SettingsIcon />} title=\"Settings\">\n            {isDesktopView && \"Settings\"}\n        </Button>\n        <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        >\n            <MenuContainer>\n                <ThemeSelector />\n            </MenuContainer>\n        </Popover>\n    </Wrapper>\n  );\n};\n\nexport default SettingsMenu;","import { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Routes, ThemeTypes } from '../../constants/Constants';\nimport { Description, Home, Collections } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport CssConstants from '../../constants/CssConstants';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport SettingsMenu from './SettingsMenu';\n\nconst HeaderEl = styled.header<{themeType: ThemeTypes}>`\n    display: flex;\n    height: ${CssConstants.headerHeight};\n    background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n\n    >div {\n        background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n    }\n`;\n\nconst HeaderBorder = styled.div`\n    height: ${CssConstants.headerBorderWidth};\n    background-color: ${CssConstants.themes.shared.accentColor};\n`;\n\nconst LeftHeaderEl = styled.div`\n    width: 10rem;\n    margin-right: auto;\n`;\n\nconst RightHeaderEl = styled.div`\n    width: 10rem;\n    margin-left: auto;\n`;\n\nconst Header: React.FC = () => {\n    const location = useLocation();\n    const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n    const [selectedTab, setSelectedTab] = useState<string>(location.pathname);\n\n    React.useEffect(() => {\n        setSelectedTab(location.pathname);\n    }, [location.pathname]);\n\n    return (\n        <>\n            <HeaderEl className=\"App-header\" themeType={themeType} >\n                <LeftHeaderEl/>\n                <BottomNavigation value={selectedTab} showLabels >\n                    <BottomNavigationAction component={Link} label=\"Home\" value={Routes.home} icon={<Home />} to={Routes.home} />\n                    <BottomNavigationAction component={Link} label=\"Projects\" value={Routes.projects} icon={<Collections />} to={Routes.projects} />\n                    <BottomNavigationAction component={Link} label=\"Resume\" value={Routes.resume} icon={<Description />} to={Routes.resume} />\n                </BottomNavigation>\n                <RightHeaderEl>\n                    <SettingsMenu />\n                </RightHeaderEl>\n            </HeaderEl>\n            <HeaderBorder />\n        </>\n    );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/glen-mt.74ceae32.jpg\";","import styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nexport const PageWrapper = styled.div`\n    width: 100%;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: auto;\n    padding: 2rem 1rem;\n    box-sizing: border-box;\n`;\n","import { Grow, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport profileImag from '../assets/glen-mt.jpg';\nimport {PageWrapper} from '../util/sharedElements';\n\nconst Img = styled.img`\n    border-radius: 20%;\n    object-fit: contain;\n    justify-self: center;\n`;\n\nconst MobileImg = styled(Img)`\n    min-width: 0;\n    max-width: 22rem;\n    max-height: 100%;\n`;\n\nconst DesktopImg = styled(Img)`\n    max-width: 100%;\n    max-height: 35rem;\n`;\n\nconst GridContainerColumns = styled.div`\n    display: grid;\n    grid-template-columns: minmax(5rem, 1fr) 1fr;\n`;\n\nconst GridContainerRows = styled.div`\n    display: grid;\n    grid-template-rows: minmax(5rem, 1fr) 1fr;\n`;\n\nconst TextContainer = styled.span<{isDesktopView: boolean}>`\n    margin: ${props => props.isDesktopView ? '4rem 1rem 0 4rem' : '2rem auto'};\n    word-break: break-word;\n`;\n\nconst Home: React.FC = () => {\n    const isDesktopView = useMediaQuery('(min-width:650px)');\n    const GridContainer = isDesktopView ? GridContainerColumns : GridContainerRows;\n    const ImageElemnt = isDesktopView ? DesktopImg : MobileImg ;\n\n    return (\n        <>\n            <PageWrapper>\n                <GridContainer>\n                    <Grow in={true}>\n                        <ImageElemnt src={profileImag} />\n                    </Grow>\n                    <Grow in={true}>\n                        <TextContainer isDesktopView={isDesktopView}>Hi I'm Glen! Eventually I will talk about myself here</TextContainer>\n                    </Grow>\n                </GridContainer>\n            </PageWrapper>\n        </>\n    );\n};\n\nexport default Home;","import { CircularProgress } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Constants from '../constants/Constants';\nimport CssConstants from '../constants/CssConstants';\n\nconst ResumeIFrame = styled.iframe`\n    height: 100%;\n`;\n\nconst ContentWrapper = styled.div`\n    width: 100%;\n    position: absolute;\n    height: ${`calc(100vh - ${CssConstants.totalHeaderHeight})`};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Resume: React.FC = () => {\n    const [isLoading, setIsLoading] = useState(true);\n\n    return (\n        <>\n            {isLoading && <ContentWrapper><CircularProgress /></ContentWrapper>}\n            <ResumeIFrame title=\"ResumeWrapper\" src={Constants.resumeIframeSource} onLoad={() => setIsLoading(false)} />\n        </>\n    );\n};\n\nexport default Resume;","import React from 'react';\nimport styled from 'styled-components';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { ProjectTags } from \"../../constants/Constants\";\nimport CasinoIcon from '@material-ui/icons/Casino';\n\nconst TypeTagsWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin: 0 -0.5rem -1rem 0;\n`;\n\nconst IconWrapper = styled.div`\n    padding: 0.25rem;\n`;\n\nconst ProjectTagsDisplay: React.FC<IProjectTagsDisplayProps> = ({tags}) => {\n\n    return (\n        <TypeTagsWrapper>\n            {tags.includes(ProjectTags.github) && <IconWrapper title=\"Has Github Repo\"><GitHubIcon /></IconWrapper>}\n            {tags.includes(ProjectTags.foundry) && <IconWrapper title=\"Foundry Project\"><CasinoIcon /></IconWrapper>}\n      </TypeTagsWrapper>\n    );\n};\n\nexport interface IProjectTagsDisplayProps {\n    tags: ProjectTags[];\n}\n\nexport default ProjectTagsDisplay;","import { Card, CardContent, CardMedia, Grow, makeStyles, Modal, Theme, useTheme } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ThemeTypes } from '../../constants/Constants';\nimport CssConstants from '../../constants/CssConstants';\nimport { IProject } from '../../models/projectModel';\nimport ProjectTagsDisplay from './ProjectTagsDisplay';\n\nconst Wrapper = styled.div`\n    padding: 1rem;\n    box-sizing: border-box;\n`;\n\nconst useStyles = makeStyles({\n    media: {\n      height: 140,\n    },\n  });\n\n\n\nconst ModalWrapper = styled.div<{theme: Theme}>`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400;\n    background-color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.secondaryBackground : CssConstants.themes.light.secondaryBackground};\n    color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n    border: 2px solid;\n    border-color: ${props => props.theme.palette.type === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n    box-shadow: ${props => props.theme.shadows[5]};\n    padding: ${props => props.theme.spacing(2, 4, 3)};\n    border-radius: 1rem;\n`;\n\nconst ProjectCard: React.FC<IProject> = ({name, img, description, tags}) => {\n    const [displayModal, setDisplayModal] = useState(false);\n    const theme = useTheme<Theme>();\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grow in={true}>\n                <Wrapper>\n                    <Card variant=\"outlined\" onClick={() => setDisplayModal(true)}>\n                        {img && <CardMedia \n                            className={classes.media}\n                            image={img}\n                            title={name}\n                        />}\n                        <CardContent>\n                            <span>\n                                {name}\n                            </span>\n                            {tags?.length && <ProjectTagsDisplay tags={tags} />}\n                        </CardContent>\n                    </Card>\n                </Wrapper>\n            </Grow>\n            <Modal open={displayModal} onClose={() => setDisplayModal(false)}>\n                <ModalWrapper theme={theme}>\n                    <h2 id=\"project-details-modal-title\">{`${name} Details`}</h2>\n                    <p id=\"project-details-modal-description\">\n                        {description}\n                    </p>\n                </ModalWrapper>\n            </Modal>\n        </>\n    );\n};\n\nexport default ProjectCard;","import { ProjectTags } from \"../constants/Constants\";\nimport { IProject } from \"../models/projectModel\";\n\nexport const projects: IProject[] = [\n    {\n        name: 'Dramatic Rolls',\n        img: \"https://github.com/gsimon2/dramatic-rolls/blob/main/natty20.gif?raw=true\",\n        description: \"Fill out description here\",\n        tags: [ProjectTags.github, ProjectTags.foundry]\n    },\n    {\n        name: 'Playlist Drag and Drop',\n        img: \"https://github.com/gsimon2/playlist-drag-and-drop/blob/main/playlist-drag-and-drop-demo.gif?raw=true\",\n        description: \"Fill out description here\",\n        tags: [ProjectTags.github, ProjectTags.foundry]\n    },\n    {\n        name: 'Pf2e Inspire Courage',\n        img: \"https://github.com/gsimon2/pf2e-inspire-courage/blob/main/demo.gif?raw=true\",\n        description: \"Fill out description here\",\n        tags: [ProjectTags.github, ProjectTags.foundry]\n    },\n    {\n        name: 'Hide Player UI',\n        description: \"Fill out description here\",\n        tags: [ProjectTags.github, ProjectTags.foundry]\n    },\n    {\n        name: 'Close Player Art',\n        img: \"https://github.com/gsimon2/close-player-art/blob/main/close-art.gif?raw=true\",\n        description: \"Fill out description here\",\n        tags: [ProjectTags.github, ProjectTags.foundry]\n    }\n]","import { useMediaQuery } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PageWrapper } from '../../util/sharedElements';\nimport ProjectCard from './ProjectCard';\nimport {projects} from '../../siteInfo/projects';\n\nconst GridContainer = styled.div<{numColumns: number}>`\n    display: grid;\n    grid-template-columns: ${props => `repeat(${props.numColumns}, 1fr)`};\n`;\n\nconst ProjectsPage: React.FC = () => {\n    const isSingleColumnView = useMediaQuery('(max-width:500px)');\n    const isDoubleColumnView = useMediaQuery('(max-width:750px)');\n    const isTripleColumnView = useMediaQuery('(max-width:1000px)');\n\n    const getNumberOfColumns = () => {\n        if (isSingleColumnView) {\n            return 1;\n        }\n\n        if (isDoubleColumnView) {\n            return 2;\n        }\n\n        if (isTripleColumnView) {\n            return 3;\n        }\n\n        return 4;\n    };\n\n    return (\n        <PageWrapper>\n            <GridContainer numColumns={getNumberOfColumns()}>\n                {projects.map((p, index) => <ProjectCard {...p} key={`card${index}`}/>)}\n            </GridContainer>\n        </PageWrapper>\n    );\n};\n\nexport default ProjectsPage;","import { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CssConstants from '../constants/CssConstants';\n\nconst AlertWrapper = styled.div`\n    max-width: ${CssConstants.appContentMaxWidth};\n    margin: 1rem auto 0;\n`;\n\nconst AlertBanner: React.FC = () => {\n    const [displayAlert, setDisplayAlert] = useState(true);\n\n    return (\n        <>\n        { displayAlert ?\n            <AlertWrapper>\n                <Alert severity=\"info\" onClose={() => setDisplayAlert(false)}>Site is under development - More to come soon! = D</Alert>\n            </AlertWrapper> :\n            null\n        }\n        </>\n    );\n};\n\nexport default AlertBanner;","import * as React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Routes } from '../constants/Constants';\nimport Home from './Home';\nimport Resume from './Resume';\nimport ProjectsPage from './projects/ProjectsPage';\nimport AlertBanner from './AlertBanner';\n\nconst AppContentRouter: React.FC = () => {\n\n    return (\n        <>\n            <AlertBanner />\n            <Route  path={Routes.resume} component={Resume}/>\n            <Route path={Routes.projects} component={ProjectsPage} />\n            <Route  exact path={Routes.home} component={Home}/>\n        </>\n    );\n};\n\nexport default AppContentRouter;","import { HashRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from './components/Header/Header';\nimport AppContentRouter from './components/AppContentRouter';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport CssConstants from './constants/CssConstants';\nimport { RootState } from './redux/store';\nimport { useSelector } from 'react-redux';\nimport { ThemeTypes } from './constants/Constants';\n\nconst PageWrapper = styled.div<{themeType: ThemeTypes}>`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  background-color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.primaryBackground : CssConstants.themes.light.primaryBackground};\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  color: ${props => props.themeType === ThemeTypes.dark ? CssConstants.themes.dark.textColor : CssConstants.themes.light.textColor};\n`;\n\nconst AppContentWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nfunction App() {\n  const themeType = useSelector((state: RootState) => state.userPreferences.theme);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: themeType === ThemeTypes.dark ? 'dark' : 'light'\n        }\n      }),\n    [themeType],\n  );\n  \n  return (\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <PageWrapper themeType={themeType}>\n            <AppContentWrapper>\n              <Header />\n              <AppContentRouter />\n            </AppContentWrapper>\n          </PageWrapper>\n        </HashRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userPreferenceReducer from './userPreferencesSlice';\n\nconst store = configureStore({\n    reducer: {\n        userPreferences: userPreferenceReducer\n    }\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}